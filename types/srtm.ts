export interface SecurityRequirement {
  id: string;
  title: string;
  description: string;
  source: string;
  category: 'Authentication' | 'Authorization' | 'Encryption' | 'Audit' | 'Input Validation' | 'Access Control' | 'Data Protection' | 'Network Security' | 'System Integrity' | 'Incident Response' | 'Other';
  priority: 'High' | 'Medium' | 'Low';
  status: 'Draft' | 'Approved' | 'Implemented' | 'Tested' | 'Verified';
  type?: string;
  nistFunction?: 'Identify' | 'Protect' | 'Detect' | 'Respond' | 'Recover';
  nistSubcategory?: string;
  rmfStep?: 'Categorize' | 'Select' | 'Implement' | 'Assess' | 'Authorize' | 'Monitor';
  controlFamily?: string; // NIST SP 800-53 Control Family (AC, AU, CA, etc.)
  controlIdentifier?: string; // e.g., AC-2, AU-12, CA-7
  complianceFramework?: string; // Framework source (NIST, STIG, etc.)
  stigRef?: string; // STIG reference ID
  cciRef?: string[]; // Control Correlation Identifier references
  createdAt: Date;
  updatedAt: Date;
}

export interface SystemDesignElement {
  id: string;
  name: string;
  type: 'Component' | 'Module' | 'Interface' | 'Service' | 'Database' | 'API';
  description: string;
  technology?: string;
  owner?: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface TraceabilityLink {
  id: string;
  requirementId: string;
  designElementId?: string;
  linkType: 'Requirement-Design';
  status: 'Active' | 'Inactive';
  rationale?: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface SRTMData {
  requirements: SecurityRequirement[];
  designElements: SystemDesignElement[];
  traceabilityLinks: TraceabilityLink[];
  stigRequirements: StigRequirement[];
  systemCategorizations: SystemCategorization[];
}

export interface StigRequirement {
  id: string;
  stigId: string; // e.g., V-220697
  vulnId?: string; // Vulnerability ID
  groupId?: string; // Group ID
  ruleId?: string; // Rule ID
  family?: string; // STIG family for organization
  severity: 'CAT I' | 'CAT II' | 'CAT III';
  title: string;
  description: string;
  checkText: string;
  fixText: string;
  targetKey?: string;
  stigRef?: string;
  cciRef?: string[];
  applicability: 'Applicable' | 'Not Applicable' | 'Not Reviewed';
  status: 'Not Started' | 'In Progress' | 'Completed' | 'Exception Requested';
  implementationStatus: 'Open' | 'NotAFinding' | 'Not_Applicable';
  findings?: string;
  comments?: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface GroupedStigRequirement {
  title: string;
  count: number;
  family?: string;
  severity: 'CAT I' | 'CAT II' | 'CAT III';
  description: string;
  checkText: string;
  fixText: string;
  stigIds: string[]; // Array of STIG IDs that have this title
  requirements: StigRequirement[]; // Full requirement objects for detailed view
  status: 'Not Started' | 'In Progress' | 'Completed' | 'Exception Requested';
  implementationStatus: 'Open' | 'NotAFinding' | 'Not_Applicable';
}

export interface StigImportResult {
  success: boolean;
  imported: number;
  errors: string[];
  stigRequirements: StigRequirement[];
}

export interface SystemCategorization {
  id: string;
  systemName: string;
  systemDescription: string;
  informationTypes: InformationType[];
  overallCategorization: {
    confidentiality: 'Low' | 'Moderate' | 'High';
    integrity: 'Low' | 'Moderate' | 'High';
    availability: 'Low' | 'Moderate' | 'High';
  };
  rationale: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface InformationType {
  id: string;
  name: string;
  description: string;
  category: string; // e.g., "D.1 - Combat Operations" or "D.1.1 - Tactical Operations"
  parentCategory?: string; // For subtypes, references the parent category
  confidentialityImpact: 'Low' | 'Moderate' | 'High';
  integrityImpact: 'Low' | 'Moderate' | 'High';
  availabilityImpact: 'Low' | 'Moderate' | 'High';
  rationale?: string;
}

export interface NISTInformationTypeStructure {
  category: string;
  name: string;
  description: string;
  confidentiality?: 'Low' | 'Moderate' | 'High';
  integrity?: 'Low' | 'Moderate' | 'High';
  availability?: 'Low' | 'Moderate' | 'High';
  subtypes?: NISTInformationSubtype[];
}

export interface NISTInformationSubtype {
  category: string;
  name: string;
  description: string;
  confidentiality?: 'Low' | 'Moderate' | 'High';
  integrity?: 'Low' | 'Moderate' | 'High';
  availability?: 'Low' | 'Moderate' | 'High';
}

export interface SecurityControlBaseline {
  impact: 'Low' | 'Moderate' | 'High';
  controls: string[]; // Control identifiers like "AC-1", "AC-2", etc.
}

export interface AutoGeneratedRequirement {
  controlId: string;
  controlFamily: string;
  title: string;
  description: string;
  priority: 'High' | 'Medium' | 'Low';
  nistFunction?: 'Identify' | 'Protect' | 'Detect' | 'Respond' | 'Recover';
  rmfStep?: 'Categorize' | 'Select' | 'Implement' | 'Assess' | 'Authorize' | 'Monitor';
}

export type EntityType = 'requirement' | 'designElement' | 'traceabilityLink' | 'stig' | 'categorization';

export interface WorkflowData {
  systemCategorizations: SystemCategorization[];
  designElements: SystemDesignElement[];
  exportDate: string;
  version: string;
}