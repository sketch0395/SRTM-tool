/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/fetch-stig-csv/route";
exports.ids = ["app/api/fetch-stig-csv/route"];
exports.modules = {

/***/ "(rsc)/./app/api/fetch-stig-csv/route.ts":
/*!*****************************************!*\
  !*** ./app/api/fetch-stig-csv/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _utils_stigFamilyRecommendations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/stigFamilyRecommendations */ \"(rsc)/./utils/stigFamilyRecommendations.ts\");\n\n\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const familyIdsParam = searchParams.get('familyIds');\n    if (!familyIdsParam) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Missing familyIds parameter'\n        }, {\n            status: 400\n        });\n    }\n    const familyIds = familyIdsParam.split(',').map((id)=>id.trim()).filter((id)=>id);\n    const csvResults = {};\n    for (const familyId of familyIds){\n        // Determine official STIG ID for download\n        const family = _utils_stigFamilyRecommendations__WEBPACK_IMPORTED_MODULE_1__.STIG_FAMILIES.find((f)=>f.id === familyId);\n        const stigId = family?.stigId || familyId;\n        try {\n            // Attempt fetch from STIG Viewer\n            const viewerUrl = `https://stigviewer.com/stigs/download/${stigId}.csv`;\n            let res = await fetch(viewerUrl);\n            let text = null;\n            if (res.ok) {\n                text = await res.text();\n            }\n            // Fallback to DISA public cyber.mil if no data\n            if (!text) {\n                const disaUrl = `https://public.cyber.mil/stigs/download/${stigId}.csv`;\n                res = await fetch(disaUrl);\n                if (res.ok) {\n                    text = await res.text();\n                    console.info(`Fetched CSV for ${familyId} from DISA fallback`);\n                }\n            }\n            if (text) {\n                csvResults[familyId] = text;\n            } else {\n                console.error(`No CSV data returned for ${familyId} from any source`);\n            }\n        } catch (err) {\n            console.error(`Error fetching CSV for ${familyId}:`, err);\n        }\n    }\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(csvResults);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2ZldGNoLXN0aWctY3N2L3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUU4QjtBQUNsRSxlQUFlRSxJQUFJQyxPQUFnQjtJQUN4QyxNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlGLFFBQVFHLEdBQUc7SUFDNUMsTUFBTUMsaUJBQWlCSCxhQUFhSSxHQUFHLENBQUM7SUFDeEMsSUFBSSxDQUFDRCxnQkFBZ0I7UUFDbkIsT0FBT1AscURBQVlBLENBQUNTLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQThCLEdBQUc7WUFBRUMsUUFBUTtRQUFJO0lBQ25GO0lBQ0EsTUFBTUMsWUFBWUwsZUFBZU0sS0FBSyxDQUFDLEtBQUtDLEdBQUcsQ0FBQ0MsQ0FBQUEsS0FBTUEsR0FBR0MsSUFBSSxJQUFJQyxNQUFNLENBQUNGLENBQUFBLEtBQU1BO0lBQzlFLE1BQU1HLGFBQXFDLENBQUM7SUFFNUMsS0FBSyxNQUFNQyxZQUFZUCxVQUFXO1FBQ2hDLDBDQUEwQztRQUMxQyxNQUFNUSxTQUFTbkIsMkVBQWFBLENBQUNvQixJQUFJLENBQUNDLENBQUFBLElBQUtBLEVBQUVQLEVBQUUsS0FBS0k7UUFDaEQsTUFBTUksU0FBU0gsUUFBUUcsVUFBVUo7UUFDakMsSUFBSTtZQUNGLGlDQUFpQztZQUNqQyxNQUFNSyxZQUFZLENBQUMsc0NBQXNDLEVBQUVELE9BQU8sSUFBSSxDQUFDO1lBQ3ZFLElBQUlFLE1BQU0sTUFBTUMsTUFBTUY7WUFDdEIsSUFBSUcsT0FBc0I7WUFDMUIsSUFBSUYsSUFBSUcsRUFBRSxFQUFFO2dCQUNWRCxPQUFPLE1BQU1GLElBQUlFLElBQUk7WUFDdkI7WUFDQSwrQ0FBK0M7WUFDL0MsSUFBSSxDQUFDQSxNQUFNO2dCQUNULE1BQU1FLFVBQVUsQ0FBQyx3Q0FBd0MsRUFBRU4sT0FBTyxJQUFJLENBQUM7Z0JBQ3ZFRSxNQUFNLE1BQU1DLE1BQU1HO2dCQUNsQixJQUFJSixJQUFJRyxFQUFFLEVBQUU7b0JBQ1ZELE9BQU8sTUFBTUYsSUFBSUUsSUFBSTtvQkFDckJHLFFBQVFDLElBQUksQ0FBQyxDQUFDLGdCQUFnQixFQUFFWixTQUFTLG1CQUFtQixDQUFDO2dCQUMvRDtZQUNGO1lBQ0EsSUFBSVEsTUFBTTtnQkFDUlQsVUFBVSxDQUFDQyxTQUFTLEdBQUdRO1lBQ3pCLE9BQU87Z0JBQ0xHLFFBQVFwQixLQUFLLENBQUMsQ0FBQyx5QkFBeUIsRUFBRVMsU0FBUyxnQkFBZ0IsQ0FBQztZQUN0RTtRQUNGLEVBQUUsT0FBT2EsS0FBSztZQUNaRixRQUFRcEIsS0FBSyxDQUFDLENBQUMsdUJBQXVCLEVBQUVTLFNBQVMsQ0FBQyxDQUFDLEVBQUVhO1FBQ3ZEO0lBQ0Y7SUFFQSxPQUFPaEMscURBQVlBLENBQUNTLElBQUksQ0FBQ1M7QUFDM0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xccm9ubmlcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZWN0c1xcU1JUTS10b29sXFxhcHBcXGFwaVxcZmV0Y2gtc3RpZy1jc3ZcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuXHJcbmltcG9ydCB7IFNUSUdfRkFNSUxJRVMgfSBmcm9tICcuLi8uLi8uLi91dGlscy9zdGlnRmFtaWx5UmVjb21tZW5kYXRpb25zJztcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBSZXF1ZXN0KSB7XHJcbiAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xyXG4gIGNvbnN0IGZhbWlseUlkc1BhcmFtID0gc2VhcmNoUGFyYW1zLmdldCgnZmFtaWx5SWRzJyk7XHJcbiAgaWYgKCFmYW1pbHlJZHNQYXJhbSkge1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdNaXNzaW5nIGZhbWlseUlkcyBwYXJhbWV0ZXInIH0sIHsgc3RhdHVzOiA0MDAgfSk7XHJcbiAgfVxyXG4gIGNvbnN0IGZhbWlseUlkcyA9IGZhbWlseUlkc1BhcmFtLnNwbGl0KCcsJykubWFwKGlkID0+IGlkLnRyaW0oKSkuZmlsdGVyKGlkID0+IGlkKTtcclxuICBjb25zdCBjc3ZSZXN1bHRzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge307XHJcblxyXG4gIGZvciAoY29uc3QgZmFtaWx5SWQgb2YgZmFtaWx5SWRzKSB7XHJcbiAgICAvLyBEZXRlcm1pbmUgb2ZmaWNpYWwgU1RJRyBJRCBmb3IgZG93bmxvYWRcclxuICAgIGNvbnN0IGZhbWlseSA9IFNUSUdfRkFNSUxJRVMuZmluZChmID0+IGYuaWQgPT09IGZhbWlseUlkKTtcclxuICAgIGNvbnN0IHN0aWdJZCA9IGZhbWlseT8uc3RpZ0lkIHx8IGZhbWlseUlkO1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gQXR0ZW1wdCBmZXRjaCBmcm9tIFNUSUcgVmlld2VyXHJcbiAgICAgIGNvbnN0IHZpZXdlclVybCA9IGBodHRwczovL3N0aWd2aWV3ZXIuY29tL3N0aWdzL2Rvd25sb2FkLyR7c3RpZ0lkfS5jc3ZgO1xyXG4gICAgICBsZXQgcmVzID0gYXdhaXQgZmV0Y2godmlld2VyVXJsKTtcclxuICAgICAgbGV0IHRleHQ6IHN0cmluZyB8IG51bGwgPSBudWxsO1xyXG4gICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgdGV4dCA9IGF3YWl0IHJlcy50ZXh0KCk7XHJcbiAgICAgIH1cclxuICAgICAgLy8gRmFsbGJhY2sgdG8gRElTQSBwdWJsaWMgY3liZXIubWlsIGlmIG5vIGRhdGFcclxuICAgICAgaWYgKCF0ZXh0KSB7XHJcbiAgICAgICAgY29uc3QgZGlzYVVybCA9IGBodHRwczovL3B1YmxpYy5jeWJlci5taWwvc3RpZ3MvZG93bmxvYWQvJHtzdGlnSWR9LmNzdmA7XHJcbiAgICAgICAgcmVzID0gYXdhaXQgZmV0Y2goZGlzYVVybCk7XHJcbiAgICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgICAgdGV4dCA9IGF3YWl0IHJlcy50ZXh0KCk7XHJcbiAgICAgICAgICBjb25zb2xlLmluZm8oYEZldGNoZWQgQ1NWIGZvciAke2ZhbWlseUlkfSBmcm9tIERJU0EgZmFsbGJhY2tgKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHRleHQpIHtcclxuICAgICAgICBjc3ZSZXN1bHRzW2ZhbWlseUlkXSA9IHRleHQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihgTm8gQ1NWIGRhdGEgcmV0dXJuZWQgZm9yICR7ZmFtaWx5SWR9IGZyb20gYW55IHNvdXJjZWApO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgZmV0Y2hpbmcgQ1NWIGZvciAke2ZhbWlseUlkfTpgLCBlcnIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKGNzdlJlc3VsdHMpO1xyXG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIlNUSUdfRkFNSUxJRVMiLCJHRVQiLCJyZXF1ZXN0Iiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwiZmFtaWx5SWRzUGFyYW0iLCJnZXQiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJmYW1pbHlJZHMiLCJzcGxpdCIsIm1hcCIsImlkIiwidHJpbSIsImZpbHRlciIsImNzdlJlc3VsdHMiLCJmYW1pbHlJZCIsImZhbWlseSIsImZpbmQiLCJmIiwic3RpZ0lkIiwidmlld2VyVXJsIiwicmVzIiwiZmV0Y2giLCJ0ZXh0Iiwib2siLCJkaXNhVXJsIiwiY29uc29sZSIsImluZm8iLCJlcnIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/fetch-stig-csv/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffetch-stig-csv%2Froute&page=%2Fapi%2Ffetch-stig-csv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffetch-stig-csv%2Froute.ts&appDir=C%3A%5CUsers%5Cronni%5COneDrive%5CDesktop%5CProjects%5CSRTM-tool%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cronni%5COneDrive%5CDesktop%5CProjects%5CSRTM-tool&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffetch-stig-csv%2Froute&page=%2Fapi%2Ffetch-stig-csv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffetch-stig-csv%2Froute.ts&appDir=C%3A%5CUsers%5Cronni%5COneDrive%5CDesktop%5CProjects%5CSRTM-tool%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cronni%5COneDrive%5CDesktop%5CProjects%5CSRTM-tool&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Users_ronni_OneDrive_Desktop_Projects_SRTM_tool_app_api_fetch_stig_csv_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/fetch-stig-csv/route.ts */ \"(rsc)/./app/api/fetch-stig-csv/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/fetch-stig-csv/route\",\n        pathname: \"/api/fetch-stig-csv\",\n        filename: \"route\",\n        bundlePath: \"app/api/fetch-stig-csv/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Users\\\\ronni\\\\OneDrive\\\\Desktop\\\\Projects\\\\SRTM-tool\\\\app\\\\api\\\\fetch-stig-csv\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_ronni_OneDrive_Desktop_Projects_SRTM_tool_app_api_fetch_stig_csv_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/fetch-stig-csv/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffetch-stig-csv%2Froute&page=%2Fapi%2Ffetch-stig-csv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffetch-stig-csv%2Froute.ts&appDir=C%3A%5CUsers%5Cronni%5COneDrive%5CDesktop%5CProjects%5CSRTM-tool%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cronni%5COneDrive%5CDesktop%5CProjects%5CSRTM-tool&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./utils/stigFamilyRecommendations.ts":
/*!********************************************!*\
  !*** ./utils/stigFamilyRecommendations.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STIG_FAMILIES: () => (/* binding */ STIG_FAMILIES),\n/* harmony export */   getImplementationEffort: () => (/* binding */ getImplementationEffort),\n/* harmony export */   getStigFamilyRecommendations: () => (/* binding */ getStigFamilyRecommendations)\n/* harmony export */ });\n/**\r\n * STIG Family Recommendation Engine\r\n * Analyzes security requirements and design elements to recommend applicable STIG families\r\n * \r\n * NOTE: STIG data should be verified against official sources:\r\n * - DISA Cyber Exchange: https://public.cyber.mil/stigs/downloads/\r\n * - STIG Viewer: https://stigviewer.com/stigs\r\n * \r\n * The STIG catalog below contains common STIGs but versions, release dates, and requirement \r\n * counts are approximate and should be verified against official DISA releases before use.\r\n * \r\n * There are ~200 official STIGs available from DISA. This is a curated subset focused on\r\n * common enterprise technologies.\r\n */ // Comprehensive STIG Family catalog - Should be verified against official DISA sources\n// Reference: https://stigviewer.com/stigs (~200 official STIGs available)\n// This is a curated subset of common enterprise STIGs\nconst STIG_FAMILIES = [\n    // Application & Web Server STIGs (Verified from stigviewer.com)\n    {\n        id: 'application-security-dev',\n        name: 'Application Security and Development Security Technical Implementation Guide',\n        version: 'V6',\n        releaseDate: '2025-02-12',\n        description: 'Security Technical Implementation Guide for Application Security and Development practices',\n        applicableSystemTypes: [\n            'Application',\n            'Development',\n            'Web Application',\n            'API',\n            'Software'\n        ],\n        triggerKeywords: [\n            'application',\n            'web app',\n            'api',\n            'development',\n            'software',\n            'code',\n            'programming',\n            'frontend',\n            'backend',\n            'secure coding',\n            'devsecops'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'IA',\n            'SC',\n            'SI',\n            'SA'\n        ],\n        priority: 'High',\n        actualRequirements: 165,\n        stigId: 'APSC-DV-000001',\n        validated: true\n    },\n    {\n        id: 'web-server-srg',\n        name: 'Web Server Security Requirements Guide',\n        version: 'V4',\n        releaseDate: '2025-02-12',\n        description: 'Security Requirements Guide for Web Servers',\n        applicableSystemTypes: [\n            'Web Server',\n            'HTTP',\n            'HTTPS',\n            'Web Application'\n        ],\n        triggerKeywords: [\n            'web server',\n            'http server',\n            'https',\n            'web',\n            'server',\n            'webapp',\n            'hosting'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 89,\n        stigId: 'SRG-APP-000001',\n        validated: true\n    },\n    {\n        id: 'application-server-srg',\n        name: 'Application Server Security Requirements Guide',\n        version: 'V4',\n        releaseDate: '2025-02-11',\n        description: 'Security Requirements Guide for Application Servers',\n        applicableSystemTypes: [\n            'Application Server',\n            'App Server',\n            'Middleware'\n        ],\n        triggerKeywords: [\n            'application server',\n            'app server',\n            'middleware',\n            'java',\n            'jee',\n            'j2ee'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 95,\n        stigId: 'SRG-APP-000002',\n        validated: true\n    },\n    {\n        id: 'apache-server-2-4-unix-server',\n        name: 'Apache Server 2.4 UNIX Server Security Technical Implementation Guide',\n        version: 'V3',\n        releaseDate: '2024-12-04',\n        description: 'Security Technical Implementation Guide for Apache HTTP Server 2.4 on UNIX',\n        applicableSystemTypes: [\n            'Web Server',\n            'Apache',\n            'HTTP',\n            'UNIX',\n            'Linux'\n        ],\n        triggerKeywords: [\n            'apache',\n            'httpd',\n            'web server',\n            'http',\n            'https',\n            'ssl',\n            'tls',\n            'unix',\n            'linux'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 93,\n        stigId: 'AS24-U1-000001',\n        validated: true\n    },\n    {\n        id: 'apache-server-2-4-unix-site',\n        name: 'Apache Server 2.4 UNIX Site Security Technical Implementation Guide',\n        version: 'V2',\n        releaseDate: '2025-02-12',\n        description: 'Security Technical Implementation Guide for Apache HTTP Server 2.4 UNIX Site configuration',\n        applicableSystemTypes: [\n            'Web Server',\n            'Apache',\n            'HTTP',\n            'UNIX',\n            'Linux'\n        ],\n        triggerKeywords: [\n            'apache',\n            'httpd',\n            'web server',\n            'site',\n            'virtual host',\n            'unix',\n            'linux'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 78,\n        stigId: 'AS24-U2-000001',\n        validated: true\n    },\n    {\n        id: 'apache-server-2-4-windows-server',\n        name: 'Apache Server 2.4 Windows Server Security Technical Implementation Guide',\n        version: 'V3',\n        releaseDate: '2025-02-12',\n        description: 'Security Technical Implementation Guide for Apache HTTP Server 2.4 on Windows',\n        applicableSystemTypes: [\n            'Web Server',\n            'Apache',\n            'HTTP',\n            'Windows'\n        ],\n        triggerKeywords: [\n            'apache',\n            'httpd',\n            'web server',\n            'windows',\n            'http',\n            'https'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 93,\n        stigId: 'AS24-W1-000001',\n        validated: true\n    },\n    {\n        id: 'apache-server-2-4-windows-site',\n        name: 'Apache Server 2.4 Windows Site Security Technical Implementation Guide',\n        version: 'V2',\n        releaseDate: '2025-02-12',\n        description: 'Security Technical Implementation Guide for Apache HTTP Server 2.4 Windows Site configuration',\n        applicableSystemTypes: [\n            'Web Server',\n            'Apache',\n            'HTTP',\n            'Windows'\n        ],\n        triggerKeywords: [\n            'apache',\n            'httpd',\n            'web server',\n            'site',\n            'virtual host',\n            'windows'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 78,\n        stigId: 'AS24-W2-000001',\n        validated: true\n    },\n    {\n        id: 'apache-tomcat-9',\n        name: 'Apache Tomcat Application Server 9 Security Technical Implementation Guide',\n        version: 'V3',\n        releaseDate: '2025-02-11',\n        description: 'Security Technical Implementation Guide for Apache Tomcat 9 Application Server',\n        applicableSystemTypes: [\n            'Application Server',\n            'Tomcat',\n            'Java',\n            'Servlet'\n        ],\n        triggerKeywords: [\n            'tomcat',\n            'java',\n            'servlet',\n            'jsp',\n            'application server',\n            'java ee'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 112,\n        stigId: 'TCAT-AS-000001',\n        validated: true\n    },\n    {\n        id: 'microsoft-iis-10-server',\n        name: 'Microsoft IIS 10.0 Server Security Technical Implementation Guide',\n        version: 'V3',\n        releaseDate: '2025-02-11',\n        description: 'Security Technical Implementation Guide for Microsoft Internet Information Services 10.0 Server',\n        applicableSystemTypes: [\n            'Web Server',\n            'IIS',\n            'Windows',\n            'HTTP'\n        ],\n        triggerKeywords: [\n            'iis',\n            'internet information services',\n            'web server',\n            'asp.net',\n            'windows web',\n            'microsoft'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 107,\n        stigId: 'IIST-SV-000001',\n        validated: true\n    },\n    {\n        id: 'microsoft-iis-10-site',\n        name: 'Microsoft IIS 10.0 Site Security Technical Implementation Guide',\n        version: 'V2',\n        releaseDate: '2025-02-11',\n        description: 'Security Technical Implementation Guide for Microsoft Internet Information Services 10.0 Site configuration',\n        applicableSystemTypes: [\n            'Web Server',\n            'IIS',\n            'Windows',\n            'HTTP'\n        ],\n        triggerKeywords: [\n            'iis',\n            'internet information services',\n            'site',\n            'website',\n            'asp.net',\n            'windows web'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 89,\n        stigId: 'IIST-SI-000001',\n        validated: true\n    },\n    {\n        id: 'jboss-eap-6-3',\n        name: 'JBoss Enterprise Application Platform 6.3 Security Technical Implementation Guide',\n        version: 'V2',\n        releaseDate: '2025-02-20',\n        description: 'Security Technical Implementation Guide for JBoss EAP 6.3',\n        applicableSystemTypes: [\n            'Application Server',\n            'JBoss',\n            'Java',\n            'Red Hat'\n        ],\n        triggerKeywords: [\n            'jboss',\n            'eap',\n            'wildfly',\n            'java',\n            'application server',\n            'red hat',\n            'java ee'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 98,\n        stigId: 'JBOS-AS-000001',\n        validated: true\n    },\n    {\n        id: 'ibm-websphere-liberty',\n        name: 'IBM WebSphere Liberty Server Security Technical Implementation Guide',\n        version: 'V2',\n        releaseDate: '2025-02-11',\n        description: 'Security Technical Implementation Guide for IBM WebSphere Liberty Server',\n        applicableSystemTypes: [\n            'Application Server',\n            'WebSphere',\n            'Java',\n            'IBM'\n        ],\n        triggerKeywords: [\n            'websphere',\n            'liberty',\n            'ibm',\n            'java',\n            'application server',\n            'java ee'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 104,\n        stigId: 'WBSL-AS-000001',\n        validated: true\n    },\n    {\n        id: 'microsoft-dotnet-4',\n        name: 'Microsoft DotNet Framework 4.0 Security Technical Implementation Guide',\n        version: 'V2',\n        releaseDate: '2025-02-20',\n        description: 'Security Technical Implementation Guide for Microsoft .NET Framework 4.0',\n        applicableSystemTypes: [\n            'Framework',\n            '.NET',\n            'Application',\n            'Windows'\n        ],\n        triggerKeywords: [\n            '.net',\n            'dotnet',\n            'framework',\n            'csharp',\n            'c#',\n            'asp.net',\n            'clr',\n            'microsoft'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI',\n            'SA'\n        ],\n        priority: 'High',\n        actualRequirements: 91,\n        stigId: 'APPNET-AS-000001',\n        validated: true\n    },\n    // Operating System STIGs\n    {\n        id: 'windows-server-2022',\n        name: 'Windows Server 2022 STIG',\n        version: 'V2',\n        releaseDate: '2025-02-25',\n        description: 'Security Technical Implementation Guide for Windows Server 2022',\n        applicableSystemTypes: [\n            'Windows',\n            'Server',\n            'Domain Controller',\n            'File Server'\n        ],\n        triggerKeywords: [\n            'windows',\n            'server 2022',\n            'windows server',\n            'active directory',\n            'domain',\n            'ntfs',\n            'registry',\n            'powershell'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'IA',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 292,\n        stigId: 'WN22-00-000010',\n        validated: false\n    },\n    {\n        id: 'windows-11',\n        name: 'Windows 11 STIG',\n        version: 'V2R2',\n        releaseDate: '2024-08-15',\n        description: 'Security Technical Implementation Guide for Windows 11',\n        applicableSystemTypes: [\n            'Windows',\n            'Workstation',\n            'Desktop',\n            'Laptop'\n        ],\n        triggerKeywords: [\n            'windows 11',\n            'windows',\n            'workstation',\n            'desktop',\n            'laptop',\n            'endpoint'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'IA',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 204,\n        stigId: 'WN11-00-000010',\n        validated: false\n    },\n    {\n        id: 'rhel-9',\n        name: 'Red Hat Enterprise Linux 9 STIG',\n        version: 'V2R1',\n        releaseDate: '2024-09-01',\n        description: 'Security Technical Implementation Guide for RHEL 9',\n        applicableSystemTypes: [\n            'Linux',\n            'RHEL',\n            'Red Hat',\n            'Unix'\n        ],\n        triggerKeywords: [\n            'linux',\n            'rhel',\n            'redhat',\n            'red hat',\n            'unix',\n            'bash',\n            'systemd',\n            'selinux',\n            'centos'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'IA',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 280,\n        stigId: 'RHEL-09-010001',\n        validated: false\n    },\n    {\n        id: 'ubuntu-22-04',\n        name: 'Canonical Ubuntu 22.04 LTS STIG',\n        version: 'V2R1',\n        releaseDate: '2024-07-01',\n        description: 'Security Technical Implementation Guide for Ubuntu 22.04 LTS',\n        applicableSystemTypes: [\n            'Linux',\n            'Ubuntu',\n            'Debian'\n        ],\n        triggerKeywords: [\n            'ubuntu',\n            'debian',\n            'apt',\n            'snap',\n            'systemd',\n            'apparmor'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'IA',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 267,\n        stigId: 'UBTU-22-010001',\n        validated: false\n    },\n    // Network Device STIGs\n    {\n        id: 'cisco-ios-xe-17',\n        name: 'Cisco IOS XE Router STIG',\n        version: 'V3R3',\n        releaseDate: '2024-04-19',\n        description: 'Security Technical Implementation Guide for Cisco IOS XE 17.x Routers',\n        applicableSystemTypes: [\n            'Router',\n            'Network',\n            'Cisco',\n            'Infrastructure'\n        ],\n        triggerKeywords: [\n            'cisco',\n            'ios xe',\n            'router',\n            'routing',\n            'ospf',\n            'bgp',\n            'snmp',\n            'acl'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC'\n        ],\n        priority: 'High',\n        actualRequirements: 152,\n        stigId: 'CISC-RT-000010',\n        validated: false\n    },\n    {\n        id: 'cisco-ios-switch',\n        name: 'Cisco IOS Switch STIG',\n        version: 'V3R2',\n        releaseDate: '2024-04-19',\n        description: 'Security Technical Implementation Guide for Cisco IOS Switches',\n        applicableSystemTypes: [\n            'Switch',\n            'Network',\n            'Cisco',\n            'Infrastructure'\n        ],\n        triggerKeywords: [\n            'cisco',\n            'ios',\n            'switch',\n            'switching',\n            'vlan',\n            'stp',\n            'port security'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC'\n        ],\n        priority: 'High',\n        actualRequirements: 141,\n        stigId: 'CISC-L2S-000010',\n        validated: false\n    },\n    // Virtualization and Cloud STIGs\n    {\n        id: 'vmware-vsphere-8',\n        name: 'VMware vSphere 8.0 STIG',\n        version: 'V2R1',\n        releaseDate: '2024-10-24',\n        description: 'Security Technical Implementation Guide for VMware vSphere 8.0',\n        applicableSystemTypes: [\n            'VMware',\n            'Virtualization',\n            'Hypervisor',\n            'Cloud'\n        ],\n        triggerKeywords: [\n            'vmware',\n            'vsphere',\n            'vcenter',\n            'esxi',\n            'virtualization',\n            'hypervisor',\n            'vm'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 234,\n        stigId: 'VMCH-80-000001',\n        validated: false\n    },\n    {\n        id: 'docker-enterprise',\n        name: 'Docker Enterprise 2.x STIG',\n        version: 'V2R2',\n        releaseDate: '2023-06-15',\n        description: 'Security Technical Implementation Guide for Docker Enterprise',\n        applicableSystemTypes: [\n            'Docker',\n            'Container',\n            'Cloud'\n        ],\n        triggerKeywords: [\n            'docker',\n            'container',\n            'containerization'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'Medium',\n        actualRequirements: 103,\n        stigId: 'DKER-EE-001000',\n        validated: false\n    },\n    {\n        id: 'kubernetes',\n        name: 'Kubernetes STIG',\n        version: 'V2R1',\n        releaseDate: '2024-05-10',\n        description: 'Security Technical Implementation Guide for Kubernetes',\n        applicableSystemTypes: [\n            'Container',\n            'Kubernetes',\n            'Orchestration',\n            'Cloud'\n        ],\n        triggerKeywords: [\n            'kubernetes',\n            'k8s',\n            'container orchestration',\n            'pod',\n            'deployment',\n            'service',\n            'cluster'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 97,\n        stigId: 'CNTR-K8-000110',\n        validated: false\n    },\n    // Web Server STIGs\n    {\n        id: 'apache-server-2-4',\n        name: 'Apache Server 2.4 STIG',\n        version: 'V3R1',\n        releaseDate: '2024-03-22',\n        description: 'Security Technical Implementation Guide for Apache HTTP Server 2.4',\n        applicableSystemTypes: [\n            'Web Server',\n            'Apache',\n            'HTTP'\n        ],\n        triggerKeywords: [\n            'apache',\n            'httpd',\n            'web server',\n            'http',\n            'https',\n            'ssl',\n            'tls'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 93,\n        stigId: 'AS24-U1-000010',\n        validated: false\n    },\n    {\n        id: 'microsoft-iis-10',\n        name: 'Microsoft IIS 10.0 Server STIG',\n        version: 'V3R1',\n        releaseDate: '2024-06-28',\n        description: 'Security Technical Implementation Guide for Microsoft Internet Information Services 10.0',\n        applicableSystemTypes: [\n            'Web Server',\n            'IIS',\n            'Windows',\n            'HTTP'\n        ],\n        triggerKeywords: [\n            'iis',\n            'internet information services',\n            'web server',\n            'asp.net',\n            'windows web'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 107,\n        stigId: 'IIST-SV-000101',\n        validated: false\n    },\n    // Database STIGs\n    {\n        id: 'microsoft-sql-server-2022',\n        name: 'MS SQL Server 2022 Instance STIG',\n        version: 'V1R1',\n        releaseDate: '2024-06-21',\n        description: 'Security Technical Implementation Guide for Microsoft SQL Server 2022',\n        applicableSystemTypes: [\n            'Database',\n            'SQL Server',\n            'Microsoft',\n            'RDBMS'\n        ],\n        triggerKeywords: [\n            'sql server',\n            'mssql',\n            'database',\n            'rdbms',\n            'tsql',\n            'sql',\n            'microsoft database'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 138,\n        stigId: 'SQL6-D0-000100',\n        validated: false\n    },\n    {\n        id: 'oracle-database-19c',\n        name: 'Oracle Database 19c STIG',\n        version: 'V3R1',\n        releaseDate: '2024-06-21',\n        description: 'Security Technical Implementation Guide for Oracle Database 19c',\n        applicableSystemTypes: [\n            'Database',\n            'Oracle',\n            'RDBMS'\n        ],\n        triggerKeywords: [\n            'oracle',\n            'database',\n            'rdbms',\n            'plsql',\n            'oracle db'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 156,\n        stigId: 'O121-C2-000100',\n        validated: false\n    },\n    {\n        id: 'postgresql-9x',\n        name: 'PostgreSQL 9.x STIG',\n        version: 'V2R5',\n        releaseDate: '2023-09-12',\n        description: 'Security Technical Implementation Guide for PostgreSQL Database 9.x',\n        applicableSystemTypes: [\n            'Database',\n            'PostgreSQL',\n            'RDBMS',\n            'Open Source'\n        ],\n        triggerKeywords: [\n            'postgresql',\n            'postgres',\n            'database',\n            'rdbms',\n            'sql',\n            'db',\n            'psql'\n        ],\n        controlFamilies: [\n            'AC',\n            'AU',\n            'CM',\n            'SC',\n            'SI'\n        ],\n        priority: 'High',\n        actualRequirements: 122,\n        stigId: 'PGS9-00-000100',\n        validated: false\n    }\n];\n// Scoring weights for transparent and consistent recommendations\nconst SCORING_WEIGHTS = {\n    KEYWORD_MATCH_BASE: 2,\n    KEYWORD_MATCH_APP_SECURITY: 3,\n    KEYWORD_MATCH_TECH_SPECIFIC: 5,\n    CONTROL_FAMILY_MATCH: 3,\n    DESIGN_ELEMENT_KEYWORD: 2,\n    DESIGN_ELEMENT_TYPE: 3,\n    DESIGN_ELEMENT_EXACT_TECH: 6,\n    DEVELOPMENT_ENVIRONMENT_BONUS: 5,\n    INFRASTRUCTURE_PENALTY_IN_DEV: -3,\n    MIN_CRITICAL_CONFIDENCE: 80,\n    MIN_HIGH_CONFIDENCE: 60,\n    MIN_MEDIUM_CONFIDENCE: 40\n};\n/**\r\n * Analyzes requirements and design elements to recommend STIG families\r\n */ function getStigFamilyRecommendations(requirements, designElements) {\n    const recommendations = [];\n    for (const stigFamily of STIG_FAMILIES){\n        const recommendation = analyzeStigFamily(stigFamily, requirements, designElements);\n        if (recommendation.confidenceScore > 0) {\n            recommendations.push(recommendation);\n        }\n    }\n    // Sort by confidence score (descending - highest confidence first)\n    return recommendations.sort((a, b)=>{\n        return b.confidenceScore - a.confidenceScore;\n    });\n}\nfunction analyzeStigFamily(stigFamily, requirements, designElements) {\n    const scoreBreakdown = {\n        keywordMatches: 0,\n        controlFamilyMatches: 0,\n        designElementMatches: 0,\n        technologySpecificBonus: 0,\n        environmentBonus: 0,\n        penalties: 0\n    };\n    const matchingRequirements = [];\n    const matchingDesignElements = [];\n    const reasoning = [];\n    // Detect environment type\n    const isDevelopmentEnvironment = detectDevelopmentEnvironment(designElements);\n    const detectedTechnologies = detectTechnologies(designElements);\n    // Apply environment bonus for app security STIGs\n    if (isDevelopmentEnvironment && isApplicationSecurityStig(stigFamily.id)) {\n        scoreBreakdown.environmentBonus = SCORING_WEIGHTS.DEVELOPMENT_ENVIRONMENT_BONUS;\n        reasoning.push(`✓ Development environment detected - application security controls are essential`);\n    }\n    // Analyze requirements\n    for (const req of requirements){\n        const reqText = `${req.title} ${req.description} ${req.category} ${req.controlFamily || ''} ${req.source}`.toLowerCase();\n        // Check for keyword matches\n        const keywordMatches = stigFamily.triggerKeywords.filter((keyword)=>reqText.includes(keyword.toLowerCase()));\n        if (keywordMatches.length > 0) {\n            const weight = isApplicationSecurityStig(stigFamily.id) ? SCORING_WEIGHTS.KEYWORD_MATCH_APP_SECURITY : SCORING_WEIGHTS.KEYWORD_MATCH_BASE;\n            scoreBreakdown.keywordMatches += keywordMatches.length * weight;\n            matchingRequirements.push(req.id);\n            reasoning.push(`✓ Requirement \"${req.title}\" matches: ${keywordMatches.join(', ')}`);\n        }\n        // Check for control family matches\n        if (req.controlFamily && stigFamily.controlFamilies.includes(req.controlFamily)) {\n            scoreBreakdown.controlFamilyMatches += SCORING_WEIGHTS.CONTROL_FAMILY_MATCH;\n            if (!matchingRequirements.includes(req.id)) {\n                matchingRequirements.push(req.id);\n            }\n            reasoning.push(`✓ Control family ${req.controlFamily} applies to this STIG`);\n        }\n    }\n    // Analyze design elements with enhanced technology detection\n    for (const element of designElements){\n        const elementText = `${element.name} ${element.description} ${element.type} ${element.technology || ''}`.toLowerCase();\n        // Check for keyword matches\n        const keywordMatches = stigFamily.triggerKeywords.filter((keyword)=>elementText.includes(keyword.toLowerCase()));\n        // Check for system type matches\n        const typeMatches = stigFamily.applicableSystemTypes.filter((type)=>elementText.includes(type.toLowerCase()) || element.type.toLowerCase().includes(type.toLowerCase()));\n        if (keywordMatches.length > 0 || typeMatches.length > 0) {\n            // Check for exact technology matches\n            const hasExactTechMatch = checkExactTechnologyMatch(elementText, stigFamily.id, detectedTechnologies);\n            if (hasExactTechMatch) {\n                scoreBreakdown.technologySpecificBonus += SCORING_WEIGHTS.DESIGN_ELEMENT_EXACT_TECH;\n                reasoning.push(`⭐ Direct technology match: ${element.name} requires specific ${stigFamily.name}`);\n            }\n            scoreBreakdown.designElementMatches += keywordMatches.length * SCORING_WEIGHTS.DESIGN_ELEMENT_KEYWORD + typeMatches.length * SCORING_WEIGHTS.DESIGN_ELEMENT_TYPE;\n            matchingDesignElements.push(element.id);\n            if (keywordMatches.length > 0) {\n                reasoning.push(`✓ Design element \"${element.name}\" matches: ${keywordMatches.join(', ')}`);\n            }\n            if (typeMatches.length > 0) {\n                reasoning.push(`✓ System type match: ${typeMatches.join(', ')}`);\n            }\n        }\n    }\n    // Apply penalties for infrastructure STIGs in development environments\n    if (isDevelopmentEnvironment && isInfrastructureStig(stigFamily.id)) {\n        scoreBreakdown.penalties = SCORING_WEIGHTS.INFRASTRUCTURE_PENALTY_IN_DEV;\n        if (scoreBreakdown.keywordMatches + scoreBreakdown.designElementMatches > 0) {\n            reasoning.push(`⚠ Infrastructure STIG - lower priority for application development`);\n        }\n    }\n    // Calculate total relevance score\n    const relevanceScore = Math.max(0, scoreBreakdown.keywordMatches + scoreBreakdown.controlFamilyMatches + scoreBreakdown.designElementMatches + scoreBreakdown.technologySpecificBonus + scoreBreakdown.environmentBonus + scoreBreakdown.penalties);\n    // Calculate confidence score (0-100)\n    const confidenceScore = calculateConfidenceScore(matchingRequirements.length, matchingDesignElements.length, stigFamily, detectedTechnologies);\n    // Determine implementation priority based on confidence score\n    let implementationPriority = 'Low';\n    if (confidenceScore >= SCORING_WEIGHTS.MIN_CRITICAL_CONFIDENCE && stigFamily.priority === 'High') {\n        implementationPriority = 'Critical';\n    } else if (confidenceScore >= SCORING_WEIGHTS.MIN_HIGH_CONFIDENCE || stigFamily.priority === 'High') {\n        implementationPriority = 'High';\n    } else if (confidenceScore >= SCORING_WEIGHTS.MIN_MEDIUM_CONFIDENCE || stigFamily.priority === 'Medium') {\n        implementationPriority = 'Medium';\n    }\n    return {\n        stigFamily,\n        confidenceScore,\n        matchingRequirements,\n        matchingDesignElements,\n        reasoning,\n        implementationPriority,\n        scoreBreakdown\n    };\n}\n/**\r\n * Detect if this is a development/application environment\r\n */ function detectDevelopmentEnvironment(designElements) {\n    return designElements.some((element)=>{\n        const text = `${element.name} ${element.description} ${element.type} ${element.technology || ''}`.toLowerCase();\n        return text.includes('node') || text.includes('javascript') || text.includes('postgres') || text.includes('api') || text.includes('application') || text.includes('web') || text.includes('frontend') || text.includes('backend') || text.includes('database') || text.includes('server');\n    });\n}\n/**\r\n * Detect specific technologies in use\r\n */ function detectTechnologies(designElements) {\n    const technologies = new Set();\n    const techPatterns = {\n        'postgresql': /postgres(ql)?/i,\n        'docker': /docker|container/i,\n        'kubernetes': /k8s|kubernetes/i,\n        'apache': /apache|httpd/i,\n        'windows': /windows/i,\n        'linux': /linux|ubuntu|rhel|redhat/i\n    };\n    designElements.forEach((element)=>{\n        const text = `${element.name} ${element.description} ${element.type} ${element.technology || ''}`.toLowerCase();\n        Object.entries(techPatterns).forEach(([tech, pattern])=>{\n            if (pattern.test(text)) {\n                technologies.add(tech);\n            }\n        });\n    });\n    return technologies;\n}\n/**\r\n * Check if STIG is application security focused\r\n */ function isApplicationSecurityStig(stigId) {\n    return stigId.includes('application') || stigId.includes('web');\n}\n/**\r\n * Check if STIG is infrastructure focused\r\n */ function isInfrastructureStig(stigId) {\n    return stigId.includes('windows-server') || stigId.includes('cisco') || stigId.includes('vmware') || stigId.includes('rhel') || stigId.includes('ubuntu');\n}\n/**\r\n * Check for exact technology matches\r\n */ function checkExactTechnologyMatch(elementText, stigId, detectedTechs) {\n    const exactMatches = {\n        'postgresql-9x': [\n            'postgresql'\n        ],\n        'docker-enterprise': [\n            'docker'\n        ],\n        'kubernetes': [\n            'kubernetes'\n        ],\n        'apache-server-2-4': [\n            'apache'\n        ]\n    };\n    const requiredTechs = exactMatches[stigId];\n    if (!requiredTechs) return false;\n    return requiredTechs.some((tech)=>detectedTechs.has(tech));\n}\n/**\r\n * Calculate confidence score (0-100) based on match quality\r\n */ function calculateConfidenceScore(reqMatches, designMatches, stigFamily, detectedTechs) {\n    let score = 0;\n    // Base score from matches\n    score += Math.min(reqMatches * 10, 30); // Up to 30 points from requirements\n    score += Math.min(designMatches * 15, 40); // Up to 40 points from design elements\n    // Bonus for validated STIGs\n    if (stigFamily.validated) {\n        score += 10;\n    }\n    // Bonus for exact technology match\n    if (checkExactTechnologyMatch('', stigFamily.id, detectedTechs)) {\n        score += 20;\n    }\n    return Math.min(score, 100);\n}\n/**\r\n * Get estimated implementation effort for recommended STIG families\r\n */ function getImplementationEffort(recommendations) {\n    const totalRequirements = recommendations.reduce((sum, rec)=>sum + rec.stigFamily.actualRequirements, 0);\n    const criticalCount = recommendations.filter((r)=>r.implementationPriority === 'Critical').length;\n    const highCount = recommendations.filter((r)=>r.implementationPriority === 'High').length;\n    const mediumCount = recommendations.filter((r)=>r.implementationPriority === 'Medium').length;\n    // Estimation: 1.5 hours per requirement on average (includes documentation, testing, review)\n    const estimatedHours = totalRequirements * 1.5;\n    const estimatedDays = Math.ceil(estimatedHours / 8);\n    return {\n        totalRequirements,\n        estimatedHours: Math.round(estimatedHours),\n        estimatedDays,\n        priorityCounts: {\n            critical: criticalCount,\n            high: highCount,\n            medium: mediumCount,\n            low: recommendations.length - criticalCount - highCount - mediumCount\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./utils/stigFamilyRecommendations.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffetch-stig-csv%2Froute&page=%2Fapi%2Ffetch-stig-csv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffetch-stig-csv%2Froute.ts&appDir=C%3A%5CUsers%5Cronni%5COneDrive%5CDesktop%5CProjects%5CSRTM-tool%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cronni%5COneDrive%5CDesktop%5CProjects%5CSRTM-tool&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();