'use client';

import { useState, useEffect, useRef } from 'react';
import { SystemCategorization as SystemCategorizationType, InformationType, SecurityRequirement, AutoGeneratedRequirement, NISTInformationTypeStructure } from '../types/srtm';
import { Plus, Edit2, Trash2, Save, X, Shield, AlertCircle, CheckCircle, Download } from 'lucide-react';
import html2canvas from 'html2canvas';

interface CategorizationProps {
  systemCategorizations: SystemCategorizationType[];
  onUpdate: (categorizations: SystemCategorizationType[]) => void;
  onGenerateRequirements: (requirements: SecurityRequirement[]) => void;
  onNavigateToNext?: () => void;
}

// NIST SP 800-60 Information Types (Complete Hierarchical Structure)
const NIST_INFORMATION_TYPES = [
  // C.2.1 Controls and Oversight
  { category: "C.2.1", name: "Controls and Oversight", description: "Management controls and oversight activities", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.2.1.1", name: "Corrective Action Information Type", description: "Information supporting corrective action processes", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.1.2", name: "Program Evaluation Information Type", description: "Information supporting program evaluation activities", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.1.3", name: "Program Monitoring Information Type", description: "Information supporting program monitoring activities", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.2.2 Regulatory Development
  { category: "C.2.2", name: "Regulatory Development", description: "Development and management of regulations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.2.2.1", name: "Policy and Guidance Development Information Type", description: "Information supporting policy and guidance development", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.2.2", name: "Public Comment Tracking Information Type", description: "Information supporting public comment tracking", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.2.3", name: "Regulatory Creation Information Type", description: "Information supporting regulatory creation processes", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.2.4", name: "Rule Publication Information Type", description: "Information supporting rule publication processes", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.2.3 Planning and Budgeting
  { category: "C.2.3", name: "Planning and Budgeting", description: "Strategic planning and budget management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.2.3.1", name: "Budget Formulation Information Type", description: "Information supporting budget formulation processes", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.3.2", name: "Capital Planning Information Type", description: "Information supporting capital planning activities", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.3.3", name: "Enterprise Architecture Information Type", description: "Information supporting enterprise architecture management", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.3.4", name: "Strategic Planning Information Type", description: "Information supporting strategic planning activities", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.3.5", name: "Budget Execution Information Type", description: "Information supporting budget execution processes", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.3.6", name: "Workforce Planning Information Type", description: "Information supporting workforce planning activities", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.3.7", name: "Management Improvement Information Type", description: "Information supporting management improvement initiatives", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.3.8", name: "Budget and Performance Integration Information Type", description: "Information supporting budget and performance integration", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.3.9", name: "Tax and Fiscal Policy Information Type", description: "Information supporting tax and fiscal policy development", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.2.4 Internal Risk Management and Mitigation
  { category: "C.2.4", name: "Internal Risk Management and Mitigation", description: "Risk management and business continuity", 
    confidentiality: "Moderate", integrity: "High", availability: "Moderate", subtypes: [
    { category: "C.2.4.1", name: "Contingency Planning Information Type", description: "Information supporting contingency planning activities", 
      confidentiality: "Moderate", integrity: "High", availability: "High" },
    { category: "C.2.4.2", name: "Continuity of Operations Information Type", description: "Information supporting continuity of operations planning", 
      confidentiality: "Moderate", integrity: "High", availability: "High" },
    { category: "C.2.4.3", name: "Service Recovery Information Type", description: "Information supporting service recovery processes", 
      confidentiality: "Low", integrity: "High", availability: "High" }
  ]},
  
  // C.2.5 Revenue Collection
  { category: "C.2.5", name: "Revenue Collection", description: "Government revenue collection activities", 
    confidentiality: "Moderate", integrity: "High", availability: "Low", subtypes: [
    { category: "C.2.5.1", name: "Debt Collection Information Type", description: "Information supporting debt collection activities", 
      confidentiality: "Moderate", integrity: "High", availability: "Low" },
    { category: "C.2.5.2", name: "User Fee Collection Information Type", description: "Information supporting user fee collection processes", 
      confidentiality: "Moderate", integrity: "High", availability: "Low" },
    { category: "C.2.5.3", name: "Federal Asset Sales Information Type", description: "Information supporting federal asset sales", 
      confidentiality: "Low", integrity: "High", availability: "Low" }
  ]},
  
  // C.2.6 Public Affairs
  { category: "C.2.6", name: "Public Affairs", description: "Public communications and outreach", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.2.6.1", name: "Customer Services Information Type", description: "Information supporting customer service operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.6.2", name: "Official Information Dissemination Information Type", description: "Information supporting official information dissemination", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.6.3", name: "Product Outreach Information Type", description: "Information supporting product outreach activities", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.6.4", name: "Public Relations Information Type", description: "Information supporting public relations activities", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.2.7 Legislative Relations
  { category: "C.2.7", name: "Legislative Relations", description: "Congressional and legislative affairs", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.2.7.1", name: "Legislation Tracking Information Type", description: "Information supporting legislation tracking activities", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.7.2", name: "Legislation Testimony Information Type", description: "Information supporting legislative testimony", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.7.3", name: "Proposal Development Information Type", description: "Information supporting legislative proposal development", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.7.4", name: "Congressional Liaison Operations Information Type", description: "Information supporting congressional liaison operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.2.8 General Government
  { category: "C.2.8", name: "General Government", description: "General government operations and services", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.2.8.1", name: "Central Fiscal Operations Information Type", description: "Information supporting central fiscal operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.2", name: "Legislative Functions Information Type", description: "Information supporting legislative functions", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.3", name: "Executive Functions Information Type", description: "Information supporting executive functions", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.4", name: "Central Property Management Information Type", description: "Information supporting central property management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.5", name: "Central Personnel Management Information Type", description: "Information supporting central personnel management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.6", name: "Taxation Management Information Type", description: "Information supporting taxation management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.7", name: "Central Records and Statistics Management Information Type", description: "Information supporting central records and statistics management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.8", name: "Income Information Information Type", description: "Information supporting income information management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.9", name: "Personal Identity and Authentication Information Information Type", description: "Information supporting personal identity and authentication", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.10", name: "Entitlement Event Information Information Type", description: "Information supporting entitlement event processing", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.11", name: "Representative Payee Information Information Type", description: "Information supporting representative payee operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.2.8.12", name: "General Information Information Type", description: "General information supporting government operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.3.1 Administrative Management
  { category: "C.3.1", name: "Administrative Management", description: "General administrative management functions", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.3.1.1", name: "Facilities, Fleet, and Equipment Management Information Type", description: "Information supporting facilities, fleet, and equipment management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.1.2", name: "Help Desk Services Information Type", description: "Information supporting help desk services", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.1.3", name: "Security Management Information Type", description: "Information supporting security management operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.1.4", name: "Travel Information Type", description: "Information supporting travel management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.1.5", name: "Workplace Policy Development and Management Information Type", description: "Information supporting workplace policy development and management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.3.2 Financial Management
  { category: "C.3.2", name: "Financial Management", description: "Financial management and accounting operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.3.2.1", name: "Assets and Liability Management Information Type", description: "Information supporting assets and liability management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.2", name: "Reporting and Information Information Type", description: "Information supporting financial reporting", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.3", name: "Funds Control Information Type", description: "Information supporting funds control operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.4", name: "Accounting Information Type", description: "Information supporting accounting operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.5", name: "Payments Information Type", description: "Information supporting payment processing", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.6", name: "Collections and Receivables Information Type", description: "Information supporting collections and receivables management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.7", name: "Cost Accounting/Performance Measurement Information Type", description: "Information supporting cost accounting and performance measurement", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.3.3 Human Resource Management
  { category: "C.3.3", name: "Human Resource Management", description: "Human resources management and personnel operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.3.3.1", name: "HR Strategy Information Type", description: "Information supporting HR strategy development", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.3.2", name: "Staff Acquisition Information Type", description: "Information supporting staff acquisition processes", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.3.3", name: "Organization & Position Management Information Type", description: "Information supporting organization and position management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.3.4", name: "Compensation Management Information Type", description: "Information supporting compensation management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.3.5", name: "Benefits Management Information Type", description: "Information supporting benefits management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.3.6", name: "Employee Performance Management Information Type", description: "Information supporting employee performance management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.3.7", name: "Employee Relations Information Type", description: "Information supporting employee relations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.3.8", name: "Labor Relations Information Type", description: "Information supporting labor relations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.3.9", name: "Separation Management Information Type", description: "Information supporting separation management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.3.10", name: "Human Resources Development Information Type", description: "Information supporting human resources development", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.3.4 Supply Chain Management
  { category: "C.3.4", name: "Supply Chain Management", description: "Supply chain and procurement operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.3.4.1", name: "Goods Acquisition Information Type", description: "Information supporting goods acquisition", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.4.2", name: "Inventory Control Information Type", description: "Information supporting inventory control operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.4.3", name: "Logistics Management Information Type", description: "Information supporting logistics management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.4.4", name: "Services Acquisition Information Type", description: "Information supporting services acquisition", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.3.5 Information and Technology Management
  { category: "C.3.5", name: "Information and Technology Management", description: "Information technology and systems management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low", subtypes: [
    { category: "C.3.5.1", name: "System Development Information Type", description: "Information supporting system development activities", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.2", name: "Lifecycle/Change Management Information Type", description: "Information supporting lifecycle and change management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.3", name: "System Maintenance Information Type", description: "Information supporting system maintenance operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.4", name: "IT Infrastructure Maintenance Information Type", description: "Information supporting IT infrastructure maintenance", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.5", name: "Information Security Information Type", description: "Information supporting information security operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.6", name: "Record Retention Information Type", description: "Information supporting record retention processes", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.7", name: "Information Management Information Type", description: "Information supporting information management activities", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.8", name: "System and Network Monitoring Information Type", description: "Information supporting system and network monitoring", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.9", name: "Information Sharing Information Type", description: "Information supporting information sharing activities", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // D.1 Defense and National Security
  { category: "D.1", name: "Defense and National Security", description: "Information supporting defense and national security operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  
  // D.2 Homeland Security
  { category: "D.2", name: "Homeland Security", description: "Information supporting homeland security operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate", subtypes: [
    { category: "D.2.1", name: "Border and Transportation Security Information Type", description: "Information supporting border and transportation security", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.2.2", name: "Key Asset and Critical Infrastructure Protection Information Type", description: "Information supporting key asset and critical infrastructure protection", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.2.3", name: "Catastrophic Defense Information Type", description: "Information supporting catastrophic defense operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.2.4", name: "Executive Functions of the Executive Office of the President Information Type", description: "Information supporting EOP executive functions", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" }
  ]},
  
  // D.3 Intelligence Operations
  { category: "D.3", name: "Intelligence Operations", description: "Information supporting intelligence operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  
  // D.4 Disaster Management
  { category: "D.4", name: "Disaster Management", description: "Information supporting disaster management operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate", subtypes: [
    { category: "D.4.1", name: "Disaster Monitoring and Prediction Information Type", description: "Information supporting disaster monitoring and prediction", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.4.2", name: "Disaster Preparedness and Planning Information Type", description: "Information supporting disaster preparedness and planning", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.4.3", name: "Disaster Repair and Restoration Information Type", description: "Information supporting disaster repair and restoration", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.4.4", name: "Emergency Response Information Type", description: "Information supporting emergency response operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" }
  ]},
  
  // Additional D categories (abbreviated for space - would include full structure)
  { category: "D.5", name: "International Affairs and Commerce", description: "Information supporting international affairs and commerce", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate", subtypes: [
    { category: "D.5.1", name: "Foreign Affairs Information Type", description: "Information supporting foreign affairs operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.5.2", name: "International Development and Humanitarian Aid Information Type", description: "Information supporting international development and humanitarian aid", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.5.3", name: "Global Trade Information Type", description: "Information supporting global trade operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" }
  ]},
  
  { category: "D.6", name: "Natural Resources", description: "Information supporting natural resources management", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.7", name: "Energy", description: "Information supporting energy operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.8", name: "Environmental Management", description: "Information supporting environmental management", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.9", name: "Economic Development", description: "Information supporting economic development", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.10", name: "Community and Social Services", description: "Information supporting community and social services", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.11", name: "Transportation", description: "Information supporting transportation operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.12", name: "Education", description: "Information supporting education operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.13", name: "Workforce Management", description: "Information supporting workforce management", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.14", name: "Health", description: "Information supporting health operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.15", name: "Income Security", description: "Information supporting income security operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.16", name: "Law Enforcement", description: "Information supporting law enforcement operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.17", name: "Litigation and Judicial Activities", description: "Information supporting litigation and judicial activities", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.18", name: "Federal Correctional Activities", description: "Information supporting federal correctional activities", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.19", name: "General Sciences and Innovation", description: "Information supporting general sciences and innovation", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.20", name: "Knowledge Creation and Management", description: "Information supporting knowledge creation and management", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.21", name: "Regulatory Compliance and Enforcement", description: "Information supporting regulatory compliance and enforcement", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.22", name: "Public Goods Creation and Management", description: "Information supporting public goods creation and management", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.23", name: "Federal Financial Assistance", description: "Information supporting federal financial assistance", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.24", name: "Credit and Insurance", description: "Information supporting credit and insurance operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.25", name: "Transfers to State/Local Governments", description: "Information supporting transfers to state/local governments", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.26", name: "Direct Services for Citizens", description: "Information supporting direct services for citizens", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate", subtypes: [
    { category: "D.26.1", name: "Military Operations Information Type", description: "Information supporting military operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.26.2", name: "Civilian Operations Information Type", description: "Information supporting civilian operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" }
  ]}
];

// Security Control Baselines based on NIST SP 800-53
const SECURITY_CONTROL_BASELINES = {
  Low: [
    "AC-1", "AC-2", "AC-3", "AC-7", "AC-8", "AC-14", "AC-17", "AC-18", "AC-19", "AC-20", "AC-22",
    "AT-1", "AT-2", "AT-3", "AT-4",
    "AU-1", "AU-2", "AU-3", "AU-4", "AU-5", "AU-6", "AU-8", "AU-9", "AU-11", "AU-12",
    "CA-1", "CA-2", "CA-3", "CA-5", "CA-6", "CA-7", "CA-9",
    "CM-1", "CM-2", "CM-4", "CM-5", "CM-6", "CM-7", "CM-8", "CM-10", "CM-11",
    "CP-1", "CP-2", "CP-3", "CP-4", "CP-9", "CP-10",
    "IA-1", "IA-2", "IA-3", "IA-4", "IA-5", "IA-6", "IA-7", "IA-8",
    "IR-1", "IR-2", "IR-3", "IR-4", "IR-5", "IR-6", "IR-7", "IR-8",
    "MA-1", "MA-2", "MA-4", "MA-5",
    "MP-1", "MP-2", "MP-6", "MP-7",
    "PE-1", "PE-2", "PE-3", "PE-6", "PE-8", "PE-12", "PE-13", "PE-14", "PE-15", "PE-16",
    "PL-1", "PL-2", "PL-4",
    "PS-1", "PS-2", "PS-3", "PS-4", "PS-5", "PS-6", "PS-7", "PS-8",
    "RA-1", "RA-3", "RA-5",
    "SA-1", "SA-2", "SA-3", "SA-4", "SA-5", "SA-9", "SA-11",
    "SC-1", "SC-2", "SC-4", "SC-5", "SC-7", "SC-12", "SC-13", "SC-15", "SC-20", "SC-21", "SC-22",
    "SI-1", "SI-2", "SI-3", "SI-4", "SI-5", "SI-12"
  ],
  Moderate: [
    // Include all Low controls plus additional Moderate controls
    "AC-1", "AC-2", "AC-3", "AC-4", "AC-5", "AC-6", "AC-7", "AC-8", "AC-11", "AC-12", "AC-14", "AC-17", "AC-18", "AC-19", "AC-20", "AC-22",
    "AT-1", "AT-2", "AT-3", "AT-4",
    "AU-1", "AU-2", "AU-3", "AU-4", "AU-5", "AU-6", "AU-7", "AU-8", "AU-9", "AU-10", "AU-11", "AU-12",
    "CA-1", "CA-2", "CA-3", "CA-5", "CA-6", "CA-7", "CA-8", "CA-9",
    "CM-1", "CM-2", "CM-3", "CM-4", "CM-5", "CM-6", "CM-7", "CM-8", "CM-9", "CM-10", "CM-11",
    "CP-1", "CP-2", "CP-3", "CP-4", "CP-6", "CP-7", "CP-8", "CP-9", "CP-10",
    "IA-1", "IA-2", "IA-3", "IA-4", "IA-5", "IA-6", "IA-7", "IA-8",
    "IR-1", "IR-2", "IR-3", "IR-4", "IR-5", "IR-6", "IR-7", "IR-8",
    "MA-1", "MA-2", "MA-3", "MA-4", "MA-5", "MA-6",
    "MP-1", "MP-2", "MP-3", "MP-4", "MP-5", "MP-6", "MP-7",
    "PE-1", "PE-2", "PE-3", "PE-4", "PE-5", "PE-6", "PE-8", "PE-9", "PE-10", "PE-11", "PE-12", "PE-13", "PE-14", "PE-15", "PE-16", "PE-17",
    "PL-1", "PL-2", "PL-4", "PL-8",
    "PS-1", "PS-2", "PS-3", "PS-4", "PS-5", "PS-6", "PS-7", "PS-8",
    "RA-1", "RA-2", "RA-3", "RA-5",
    "SA-1", "SA-2", "SA-3", "SA-4", "SA-5", "SA-8", "SA-9", "SA-10", "SA-11",
    "SC-1", "SC-2", "SC-3", "SC-4", "SC-5", "SC-7", "SC-8", "SC-10", "SC-11", "SC-12", "SC-13", "SC-15", "SC-17", "SC-18", "SC-19", "SC-20", "SC-21", "SC-22", "SC-23",
    "SI-1", "SI-2", "SI-3", "SI-4", "SI-5", "SI-7", "SI-8", "SI-10", "SI-11", "SI-12"
  ],
  High: [
    // Include all Moderate controls plus additional High controls - this would be the complete set
    "AC-1", "AC-2", "AC-3", "AC-4", "AC-5", "AC-6", "AC-7", "AC-8", "AC-9", "AC-10", "AC-11", "AC-12", "AC-13", "AC-14", "AC-15", "AC-16", "AC-17", "AC-18", "AC-19", "AC-20", "AC-21", "AC-22", "AC-23", "AC-24", "AC-25",
    // ... (would include all families with enhancements)
  ]
};

// Control descriptions and mappings
const CONTROL_DETAILS: { [key: string]: AutoGeneratedRequirement } = {
  "AC-1": {
    controlId: "AC-1",
    controlFamily: "AC",
    title: "Access Control Policy and Procedures",
    description: "The organization develops, documents, and disseminates an access control policy and implements access control procedures.",
    priority: "High",
    nistFunction: "Protect",
    rmfStep: "Select"
  },
  "AC-2": {
    controlId: "AC-2",
    controlFamily: "AC",
    title: "Account Management",
    description: "The organization manages information system accounts including establishing, activating, modifying, disabling, and removing accounts.",
    priority: "High",
    nistFunction: "Protect",
    rmfStep: "Implement"
  },
  "AC-3": {
    controlId: "AC-3",
    controlFamily: "AC",
    title: "Access Enforcement",
    description: "The information system enforces approved authorizations for logical access to information and system resources.",
    priority: "High",
    nistFunction: "Protect",
    rmfStep: "Implement"
  },
  // Add more control details as needed...
};

export default function SystemCategorization({ systemCategorizations, onUpdate, onGenerateRequirements, onNavigateToNext }: CategorizationProps) {
  const [isFormOpen, setIsFormOpen] = useState(false);
  const [editingId, setEditingId] = useState<string | null>(null);
  const [showRequirements, setShowRequirements] = useState<string | null>(null);
  const [formData, setFormData] = useState<Partial<SystemCategorizationType>>({
    systemName: '',
    systemDescription: '',
    informationTypes: [],
    rationale: ''
  });

  // Helper to calculate overall categorization from informationTypes
  const getOverallCategorization = (types: InformationType[] = []): {
    confidentiality: 'High' | 'Moderate' | 'Low';
    integrity: 'High' | 'Moderate' | 'Low';
    availability: 'High' | 'Moderate' | 'Low';
  } => {
    if (!types.length) {
      return {
        confidentiality: 'Low',
        integrity: 'Low',
        availability: 'Low',
      };
    }
    const getHighestImpact = (impacts: string[]): 'High' | 'Moderate' | 'Low' => {
      if (impacts.includes('High')) return 'High';
      if (impacts.includes('Moderate')) return 'Moderate';
      return 'Low';
    };
    return {
      confidentiality: getHighestImpact(types.map(t => t.confidentialityImpact)),
      integrity: getHighestImpact(types.map(t => t.integrityImpact)),
      availability: getHighestImpact(types.map(t => t.availabilityImpact)),
    };
  };

  // Always derive overallCategorization from informationTypes
  const overallCategorization = getOverallCategorization(formData.informationTypes || []);

  // Automatically calculate overall categorization whenever information types change
  useEffect(() => {
    if (formData.informationTypes && formData.informationTypes.length > 0) {
      calculateOverallImpact();
    }
  }, [formData.informationTypes]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (editingId) {
      const updated = systemCategorizations.map(cat => 
        cat.id === editingId 
          ? { ...cat, ...formData, overallCategorization, updatedAt: new Date() }
          : cat
      );
      onUpdate(updated);
    } else {
      const newCategorization: SystemCategorizationType = {
        id: Date.now().toString(),
        systemName: formData.systemName!,
        systemDescription: formData.systemDescription!,
        informationTypes: formData.informationTypes!,
        overallCategorization,
        rationale: formData.rationale!,
        createdAt: new Date(),
        updatedAt: new Date()
      };
      onUpdate([...systemCategorizations, newCategorization]);
    }

    resetForm();
  };

  const handleEdit = (categorization: SystemCategorizationType) => {
    setFormData(categorization);
    setEditingId(categorization.id);
    setIsFormOpen(true);
  };

  const handleDelete = (id: string) => {
    if (confirm('Are you sure you want to delete this system categorization?')) {
      onUpdate(systemCategorizations.filter(cat => cat.id !== id));
    }
  };

  const resetForm = () => {
    setFormData({
      systemName: '',
      systemDescription: '',
      informationTypes: [],
      rationale: ''
    });
    setEditingId(null);
    setIsFormOpen(false);
  };

  const exportToPNG = async (categorization: SystemCategorizationType) => {
    const element = document.getElementById(`categorization-${categorization.id}`);
    if (!element) return;

    try {
      const canvas = await html2canvas(element, {
        backgroundColor: '#ffffff',
        scale: 2,
        logging: false,
        useCORS: true
      });
      
      const link = document.createElement('a');
      link.download = `${categorization.systemName.replace(/\s+/g, '-')}-categorization.png`;
      link.href = canvas.toDataURL('image/png');
      link.click();
    } catch (error) {
      console.error('Error exporting to PNG:', error);
      alert('Failed to export categorization. Please try again.');
    }
  };

  const addInformationType = () => {
    const newType: InformationType = {
      id: Date.now().toString(),
      name: '',
      description: '',
      category: '',
      confidentialityImpact: 'Low',
      integrityImpact: 'Low',
      availabilityImpact: 'Low'
    };
    setFormData(prev => ({
      ...prev,
      informationTypes: [...(prev.informationTypes || []), newType]
    }));
  };

  const updateInformationType = (index: number, updates: Partial<InformationType>) => {
    setFormData(prev => ({
      ...prev,
      informationTypes: prev.informationTypes?.map((type, i) => 
        i === index ? { ...type, ...updates } : type
      )
    }));
  };

  const removeInformationType = (index: number) => {
    setFormData(prev => ({
      ...prev,
      informationTypes: prev.informationTypes?.filter((_, i) => i !== index)
    }));
  };

  const calculateOverallImpact = () => {
    // No longer needed: overallCategorization is always derived
    return;
  }

  const generateSecurityRequirements = (categorization: SystemCategorizationType) => {
    const highestImpact = getHighestOverallImpact(categorization.overallCategorization);
    const controlIds = SECURITY_CONTROL_BASELINES[highestImpact] || SECURITY_CONTROL_BASELINES.Low;
    
    const requirements: SecurityRequirement[] = controlIds.map(controlId => {
      const controlDetail = CONTROL_DETAILS[controlId] || {
        controlId,
        controlFamily: controlId.split('-')[0],
        title: `${controlId} - Security Control`,
        description: `Implementation of NIST SP 800-53 control ${controlId}`,
        priority: 'Medium' as const,
        nistFunction: 'Protect' as const,
        rmfStep: 'Select' as const
      };

      return {
        id: `${categorization.id}-${controlId}-${Date.now()}`,
        title: controlDetail.title,
        description: controlDetail.description,
        source: `NIST SP 800-53 (${highestImpact} Baseline)`,
        category: getControlCategory(controlDetail.controlFamily),
        priority: controlDetail.priority,
        status: 'Draft' as const,
        nistFunction: controlDetail.nistFunction,
        rmfStep: controlDetail.rmfStep,
        controlFamily: controlDetail.controlFamily,
        controlIdentifier: controlDetail.controlId,
        createdAt: new Date(),
        updatedAt: new Date()
      };
    });

    onGenerateRequirements(requirements);
  };

  const getHighestOverallImpact = (categorization: { confidentiality: string; integrity: string; availability: string }) => {
    const impacts = [categorization.confidentiality, categorization.integrity, categorization.availability];
    if (impacts.includes('High')) return 'High';
    if (impacts.includes('Moderate')) return 'Moderate';
    return 'Low';
  };

  const getControlCategory = (family: string) => {
    const familyMap: { [key: string]: any } = {
      'AC': 'Access Control',
      'AT': 'Authentication',
      'AU': 'Audit',
      'CA': 'Authorization',
      'CM': 'System Integrity',
      'CP': 'Incident Response',
      'IA': 'Authentication',
      'IR': 'Incident Response',
      'MA': 'System Integrity',
      'MP': 'Data Protection',
      'PE': 'Access Control',
      'PL': 'System Integrity',
      'PS': 'Access Control',
      'RA': 'System Integrity',
      'SA': 'System Integrity',
      'SC': 'Network Security',
      'SI': 'System Integrity'
    };
    return familyMap[family] || 'Other';
  };

  const getImpactColor = (impact: string) => {
    switch (impact) {
      case 'High': return 'text-red-600 bg-red-100';
      case 'Moderate': return 'text-yellow-600 bg-yellow-100';
      case 'Low': return 'text-green-600 bg-green-100';
      default: return 'text-gray-600 bg-gray-100';
    }
  };

  const getParentCategoryDisplay = (category: string) => {
    // Check if this is a subtype by looking for it in the subtypes arrays
    for (const mainType of NIST_INFORMATION_TYPES) {
      if (mainType.subtypes) {
        const subtype = mainType.subtypes.find(st => st.category === category);
        if (subtype) {
          return `${category} (under ${mainType.category} - ${mainType.name})`;
        }
      }
    }
    // If not found as a subtype, it's a main category
    return category;
  };

  return (
    <div className="p-6">
      <div className="flex justify-between items-center mb-6">
        <div>
          <h2 className="text-2xl font-bold text-gray-900">NIST 800-60 System Categorization</h2>
          <p className="text-gray-600">Information System Security Categorization and Impact Analysis</p>
          <div className="mt-2 text-sm text-blue-600">
            <strong>Step 2:</strong> After defining design elements, categorize information types and determine security impact levels
          </div>
        </div>
        <button
          onClick={() => setIsFormOpen(true)}
          className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          <Plus className="h-4 w-4 mr-2" />
          New Categorization
        </button>
      </div>

      {/* Workflow Progress */}
      <div className="mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200">
        <div className="flex items-center justify-between text-sm">
          <div className="flex items-center space-x-4">
            <div className="flex items-center text-green-600 font-medium">
              <div className="w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-xs mr-2">✓</div>
              Design Elements
            </div>
            <div className="text-gray-400">→</div>
            <div className="flex items-center text-blue-600 font-medium">
              <div className="w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-xs mr-2">2</div>
              NIST 800-60 Categorization
            </div>
            <div className="text-gray-400">→</div>
            <div className="flex items-center text-gray-400">
              <div className="w-6 h-6 bg-gray-300 text-white rounded-full flex items-center justify-center text-xs mr-2">3</div>
              NIST 800-53 Requirements
            </div>
          </div>
          {systemCategorizations.length > 0 && (
            <div className="text-sm text-green-600 font-medium">
              ✓ {systemCategorizations.length} system{systemCategorizations.length !== 1 ? 's' : ''} categorized
            </div>
          )}
        </div>
      </div>

      {/* Form Modal */}
      {isFormOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 w-full max-w-4xl mx-4 max-h-screen overflow-y-auto">
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-lg font-semibold">
                {editingId ? 'Edit System Categorization' : 'New System Categorization'}
              </h3>
              <button onClick={resetForm} className="text-gray-500 hover:text-gray-700">
                <X className="h-5 w-5" />
              </button>
            </div>

            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    System Name *
                  </label>
                  <input
                    type="text"
                    value={formData.systemName || ''}
                    onChange={(e) => setFormData(prev => ({ ...prev, systemName: e.target.value }))}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    required
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    System Description *
                  </label>
                  <textarea
                    value={formData.systemDescription || ''}
                    onChange={(e) => setFormData(prev => ({ ...prev, systemDescription: e.target.value }))}
                    rows={2}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    required
                  />
                </div>
              </div>

              {/* Information Types */}
              <div>
                <div className="flex justify-between items-center mb-3">
                  <label className="block text-sm font-medium text-gray-700">
                    Information Types
                  </label>
                  <button
                    type="button"
                    onClick={addInformationType}
                    className="text-sm px-3 py-1 bg-blue-100 text-blue-700 rounded-md hover:bg-blue-200"
                  >
                    Add Information Type
                  </button>
                </div>

                <div className="space-y-4">
                  {formData.informationTypes?.map((infoType, index) => (
                    <div key={index} className="border rounded-lg p-4 bg-gray-50">
                      <div className="flex justify-between items-start mb-3">
                        <h4 className="font-medium text-gray-900">Information Type {index + 1}</h4>
                        <button
                          type="button"
                          onClick={() => removeInformationType(index)}
                          className="text-red-600 hover:text-red-800"
                        >
                          <Trash2 className="h-4 w-4" />
                        </button>
                      </div>

                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            NIST Category
                          </label>
                          <select
                            value={infoType.category}
                            onChange={(e) => {
                              // First check main categories
                              let selectedType = NIST_INFORMATION_TYPES.find(t => t.category === e.target.value);
                              
                              // If not found in main categories, check subtypes
                              if (!selectedType) {
                                for (const mainType of NIST_INFORMATION_TYPES) {
                                  if (mainType.subtypes) {
                                    selectedType = mainType.subtypes.find(st => st.category === e.target.value);
                                    if (selectedType) break;
                                  }
                                }
                              }
                              
                              // Auto-populate CIA values if available
                              const updateData: any = {
                                category: e.target.value,
                                name: selectedType?.name || '',
                                description: selectedType?.description || ''
                              };
                              
                              if (selectedType?.confidentiality) {
                                updateData.confidentialityImpact = selectedType.confidentiality;
                              }
                              if (selectedType?.integrity) {
                                updateData.integrityImpact = selectedType.integrity;
                              }
                              if (selectedType?.availability) {
                                updateData.availabilityImpact = selectedType.availability;
                              }
                              
                              updateInformationType(index, updateData);
                              
                              // Recalculate overall impact if CIA values were updated
                              if (selectedType?.confidentiality || selectedType?.integrity || selectedType?.availability) {
                                setTimeout(calculateOverallImpact, 100);
                              }
                            }}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          >
                            <option value="">Select Category</option>
                            {NIST_INFORMATION_TYPES.map(type => [
                              <option key={type.category} value={type.category}>
                                {type.category} - {type.name}
                              </option>,
                              ...(type.subtypes || []).map(subtype => (
                                <option key={subtype.category} value={subtype.category}>
                                  &nbsp;&nbsp;{subtype.category} - {subtype.name} (under {type.category} - {type.name})
                                </option>
                              ))
                            ]).flat()}
                          </select>
                        </div>
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            Name
                          </label>
                          <input
                            type="text"
                            value={infoType.name}
                            onChange={(e) => updateInformationType(index, { name: e.target.value })}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          />
                        </div>
                      </div>

                      <div className="mb-4">
                        <label className="block text-xs font-medium text-gray-700 mb-1">
                          Description
                        </label>
                        <textarea
                          value={infoType.description}
                          onChange={(e) => updateInformationType(index, { description: e.target.value })}
                          rows={2}
                          className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                        />
                      </div>

                      <div className="grid grid-cols-3 gap-4">
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            Confidentiality Impact
                          </label>
                          <select
                            value={infoType.confidentialityImpact}
                            onChange={(e) => {
                              updateInformationType(index, { confidentialityImpact: e.target.value as any });
                              setTimeout(calculateOverallImpact, 100);
                            }}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          >
                            <option value="Low">Low</option>
                            <option value="Moderate">Moderate</option>
                            <option value="High">High</option>
                          </select>
                        </div>
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            Integrity Impact
                          </label>
                          <select
                            value={infoType.integrityImpact}
                            onChange={(e) => {
                              updateInformationType(index, { integrityImpact: e.target.value as any });
                              setTimeout(calculateOverallImpact, 100);
                            }}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          >
                            <option value="Low">Low</option>
                            <option value="Moderate">Moderate</option>
                            <option value="High">High</option>
                          </select>
                        </div>
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            Availability Impact
                          </label>
                          <select
                            value={infoType.availabilityImpact}
                            onChange={(e) => {
                              updateInformationType(index, { availabilityImpact: e.target.value as any });
                              setTimeout(calculateOverallImpact, 100);
                            }}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          >
                            <option value="Low">Low</option>
                            <option value="Moderate">Moderate</option>
                            <option value="High">High</option>
                          </select>
                        </div>
                      </div>
                      
                      {infoType.category && (
                        <div className="mt-3 p-2 bg-blue-50 border border-blue-200 rounded-md">
                          <p className="text-xs text-blue-700">
                            <span className="font-medium">📋 NIST Guidance:</span> Impact levels are auto-populated based on NIST SP 800-60 recommendations. 
                            You can manually adjust these values based on your specific system requirements and organizational policies.
                          </p>
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>

              {/* Overall Categorization */}
              <div className="border-t pt-4">
                <h4 className="font-medium text-gray-900 mb-3">Overall System Categorization</h4>
                <div className="mb-3 p-3 bg-blue-50 border border-blue-200 rounded-md">
                  <p className="text-sm text-blue-700">
                    <span className="font-medium">📊 Auto-Calculated:</span> Per NIST SP 800-60, the overall system categorization is automatically determined as the highest impact level among all information types.
                  </p>
                </div>
                <div className="grid grid-cols-3 gap-4 mb-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Confidentiality
                    </label>
                    <div className={`w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 font-medium text-center ${
                      overallCategorization.confidentiality === 'High' ? 'text-red-700 bg-red-50 border-red-300' :
                      overallCategorization.confidentiality === 'Moderate' ? 'text-yellow-700 bg-yellow-50 border-yellow-300' :
                      'text-green-700 bg-green-50 border-green-300'
                    }`}>
                      {overallCategorization.confidentiality}
                    </div>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Integrity
                    </label>
                    <div className={`w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 font-medium text-center ${
                      overallCategorization.integrity === 'High' ? 'text-red-700 bg-red-50 border-red-300' :
                      overallCategorization.integrity === 'Moderate' ? 'text-yellow-700 bg-yellow-50 border-yellow-300' :
                      'text-green-700 bg-green-50 border-green-300'
                    }`}>
                      {overallCategorization.integrity}
                    </div>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Availability
                    </label>
                    <div className={`w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 font-medium text-center ${
                      overallCategorization.availability === 'High' ? 'text-red-700 bg-red-50 border-red-300' :
                      overallCategorization.availability === 'Moderate' ? 'text-yellow-700 bg-yellow-50 border-yellow-300' :
                      'text-green-700 bg-green-50 border-green-300'
                    }`}>
                      {overallCategorization.availability}
                    </div>
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Rationale
                  </label>
                  <textarea
                    value={formData.rationale || ''}
                    onChange={(e) => setFormData(prev => ({ ...prev, rationale: e.target.value }))}
                    rows={3}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    placeholder="Explain the rationale for this categorization..."
                  />
                </div>
              </div>

              <div className="flex justify-end space-x-3 pt-4">
                <button
                  type="button"
                  onClick={resetForm}
                  className="px-4 py-2 text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
                >
                  Cancel
                </button>
                <button
                  type="submit"
                  className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                >
                  <Save className="h-4 w-4 mr-2" />
                  {editingId ? 'Update' : 'Create'}
                </button>
              </div>
            </form>
          </div>
        </div>
      )}

      {/* Categorizations List */}
      <div className="space-y-4">
        {systemCategorizations.length === 0 ? (
          <div className="bg-white rounded-lg border p-8 text-center">
            <Shield className="h-12 w-12 mx-auto mb-4 text-gray-300" />
            <p className="text-lg font-medium text-gray-900 mb-2">No System Categorizations</p>
            <p className="text-gray-500">Create a system categorization to begin security control selection.</p>
          </div>
        ) : (
          systemCategorizations.map((categorization) => (
            <div key={categorization.id} id={`categorization-${categorization.id}`} className="bg-white rounded-lg border">
              {/* Header Section */}
              <div className="bg-gray-800 text-white p-4 rounded-t-lg">
                <div className="flex justify-between items-start">
                  <div>
                    <h3 className="text-lg font-semibold">{categorization.systemName}</h3>
                    <p className="text-gray-300 text-sm mt-1">{categorization.systemDescription}</p>
                  </div>
                  <div className="flex items-center space-x-2">
                    <button
                      onClick={() => exportToPNG(categorization)}
                      className="text-white hover:text-green-300"
                      title="Export as PNG"
                    >
                      <Download className="h-4 w-4" />
                    </button>
                    <button
                      onClick={() => handleEdit(categorization)}
                      className="text-white hover:text-blue-300"
                      title="Edit"
                    >
                      <Edit2 className="h-4 w-4" />
                    </button>
                    <button
                      onClick={() => handleDelete(categorization.id)}
                      className="text-white hover:text-red-300"
                      title="Delete"
                    >
                      <Trash2 className="h-4 w-4" />
                    </button>
                  </div>
                </div>
              </div>

              <div className="p-6">
                {/* Section 1: Identification of Information Types */}
                {categorization.informationTypes.length > 0 && (
                  <div className="mb-6">
                    <h4 className="text-base font-semibold text-gray-900 mb-3">
                      3.2.1 Identification of Information Types
                    </h4>
                    <div className="text-sm font-medium text-gray-700 mb-2">
                      Table 3-3. Provisional Information Types & Security Impact Levels
                    </div>
                    <div className="overflow-x-auto">
                      <table className="w-full border-collapse border border-gray-300">
                        <thead>
                          <tr className="bg-gray-100">
                            <th className="border border-gray-300 px-4 py-2 text-left text-sm font-semibold text-gray-900">
                              Information Type
                            </th>
                            <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                              Confidentiality Impact Level
                            </th>
                            <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                              Integrity Impact Level
                            </th>
                            <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                              Availability Impact Level
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          {categorization.informationTypes.map((infoType, index) => (
                            <tr key={index}>
                              <td className="border border-gray-300 px-4 py-3">
                                <div className="font-medium text-gray-900 text-sm">
                                  {infoType.category}-{infoType.name}
                                </div>
                                <div className="text-xs text-gray-600 mt-1">
                                  {getParentCategoryDisplay(infoType.category)}
                                </div>
                              </td>
                              <td className="border border-gray-300 px-4 py-3 text-center">
                                <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(infoType.confidentialityImpact)}`}>
                                  {infoType.confidentialityImpact}
                                </span>
                              </td>
                              <td className="border border-gray-300 px-4 py-3 text-center">
                                <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(infoType.integrityImpact)}`}>
                                  {infoType.integrityImpact}
                                </span>
                              </td>
                              <td className="border border-gray-300 px-4 py-3 text-center">
                                <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(infoType.availabilityImpact)}`}>
                                  {infoType.availabilityImpact}
                                </span>
                              </td>
                            </tr>
                          ))}
                        </tbody>
                      </table>
                    </div>
                  </div>
                )}

                {/* Section 2: Adjusting Information Types (if rationale provided) */}
                {categorization.rationale && (
                  <div className="mb-6">
                    <h4 className="text-base font-semibold text-gray-900 mb-3">
                      3.2.2 Adjusting of Information Types and Security Impact Levels
                    </h4>
                    <div className="bg-gray-50 border border-gray-300 rounded p-4">
                      <p className="text-sm text-gray-700">{categorization.rationale}</p>
                    </div>
                  </div>
                )}

                {/* Section 3: Information System Security Categorization */}
                <div>
                  <h4 className="text-base font-semibold text-gray-900 mb-3">
                    3.2.3 Information System Security Categorization
                  </h4>
                  <div className="text-sm text-gray-700 mb-2">
                    Table 3-5. Security Objective Impacts
                  </div>
                  <div className="overflow-x-auto">
                    <table className="w-full border-collapse border border-gray-300">
                      <thead>
                        <tr className="bg-gray-100">
                          <th className="border border-gray-300 px-4 py-2 text-left text-sm font-semibold text-gray-900">
                            Security Objective
                          </th>
                          <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                            Low, Moderate or High
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td className="border border-gray-300 px-4 py-3 text-sm font-medium text-gray-700">
                            Confidentiality
                          </td>
                          <td className="border border-gray-300 px-4 py-3 text-center">
                            <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(categorization.overallCategorization.confidentiality)}`}>
                              {categorization.overallCategorization.confidentiality}
                            </span>
                          </td>
                        </tr>
                        <tr>
                          <td className="border border-gray-300 px-4 py-3 text-sm font-medium text-gray-700">
                            Integrity
                          </td>
                          <td className="border border-gray-300 px-4 py-3 text-center">
                            <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(categorization.overallCategorization.integrity)}`}>
                              {categorization.overallCategorization.integrity}
                            </span>
                          </td>
                        </tr>
                        <tr>
                          <td className="border border-gray-300 px-4 py-3 text-sm font-medium text-gray-700">
                            Availability
                          </td>
                          <td className="border border-gray-300 px-4 py-3 text-center">
                            <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(categorization.overallCategorization.availability)}`}>
                              {categorization.overallCategorization.availability}
                            </span>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                  
                  {/* Security Control Baseline Summary */}
                  <div className="mt-4 bg-blue-50 border border-blue-200 rounded p-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <div className="text-sm font-medium text-gray-900">
                          Security Control Baseline: 
                          <span className={`ml-2 inline-block px-3 py-1 text-sm font-semibold rounded ${getImpactColor(getHighestOverallImpact(categorization.overallCategorization))}`}>
                            {getHighestOverallImpact(categorization.overallCategorization)}
                          </span>
                        </div>
                      </div>
                      <div className="text-sm text-gray-700">
                        <span className="font-medium">Controls Required:</span> {SECURITY_CONTROL_BASELINES[getHighestOverallImpact(categorization.overallCategorization)]?.length || 0}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))
        )}

        {/* Next Step Navigation */}
        {systemCategorizations.length > 0 && (
          <div className="mt-6 p-4 bg-green-50 border border-green-200 rounded-lg">
            <div className="flex items-center justify-between">
              <div>
                <h4 className="font-medium text-green-800">System Categorization Complete!</h4>
                <p className="text-sm text-green-600">Click next to automatically generate NIST 800-53 security contrls</p>
              </div>
              {onNavigateToNext && (
                <button
                  onClick={() => {
                    // Auto-generate requirements for all categorizations before navigating
                    systemCategorizations.forEach(categorization => {
                      generateSecurityRequirements(categorization);
                    });
                    // Navigate to requirements tab
                    onNavigateToNext();
                  }}
                  className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors"
                >
                  Next: Generate & View NIST 800-53 Controls →
                </button>
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  );
}