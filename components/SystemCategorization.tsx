'use client';

import { useState, useEffect, useRef, Fragment } from 'react';
import { SystemCategorization as SystemCategorizationType, InformationType, SecurityRequirement, AutoGeneratedRequirement, NISTInformationTypeStructure } from '../types/srtm';
import { Plus, Edit2, Trash2, Save, X, Shield, AlertCircle, CheckCircle, Download } from 'lucide-react';
import html2canvas from 'html2canvas';
import { NIST_CONTROL_BASELINES, CONTROL_FAMILY_NAMES } from '../utils/nistBaselines';

interface CategorizationProps {
  systemCategorizations: SystemCategorizationType[];
  onUpdate: (categorizations: SystemCategorizationType[]) => void;
  onGenerateRequirements: (requirements: SecurityRequirement[]) => void;
  onNavigateToNext?: () => void;
}

// NIST SP 800-60 Information Types (Complete Hierarchical Structure)
const NIST_INFORMATION_TYPES = [
  // C.2.1 Controls and Oversight
  { category: "C.2.1", name: "Controls and Oversight", description: "Controls and Oversight information is used to ensure that the operations and programs of the Federal government and its external business partners comply with applicable laws and regulations and prevent waste, fraud, and abuse.", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.2.1.1", name: "Corrective Action Information Type", description: "Corrective Action involves the enforcement functions necessary to remedy programs that have been found non-compliant with a given law, regulation, or policy.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.1.2", name: "Program Evaluation Information Type", description: "Program Evaluation involves the analysis of internal and external program effectiveness and the determination of corrective actions as appropriate.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.1.3", name: "Program Monitoring Information Type", description: "Program Monitoring involves the data-gathering activities required to determine the effectiveness of internal and external programs and the extent to which they comply with related laws, regulations, and policies.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},
  
  // C.2.2 Regulatory Development
  { category: "C.2.2", name: "Regulatory Development", description: "Regulatory Development involves activities associated with providing input to the lawmaking process in developing regulations, policies, and guidance to implement laws.", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.2.2.1", name: "Policy and Guidance Development Information Type", description: "Policy and Guidance Development involves the creation and dissemination of guidelines to assist in the interpretation and implementation of regulations.  In most cases, the effect on public welfare of a loss of policy and guidance development mission capability can be expected to be delayed rather than immediate.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.2.2", name: "Public Comment Tracking Information Type", description: "Public Comment Tracking involves the activities of soliciting, maintaining, and responding to public comments regarding proposed regulations.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.2.3", name: "Regulatory Creation Information Type", description: "Regulatory Creation involves the activities of researching and drafting proposed and final regulations.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.2.4", name: "Rule Publication Information Type", description: "Rule Publication includes all activities associated with the publication of a proposed or final rule in the Federal Register and Code of Federal Regulations. ", 
      confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},
  
  // C.2.3 Planning and Budgeting
  { category: "C.2.3", name: "Planning and Budgeting", description: "Planning and Budgeting involves the activities of determining strategic direction, identifying and establishing programs and processes to enable change, and allocating resources (capital and labor) among those programs and processes. ", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.2.3.1", name: "Budget Formulation Information Type", description: "Budget Formulation involves all activities undertaken to determine priorities for future spending and to develop an itemized forecast of future funding and expenditures during a targeted period of time. This includes the collection and use of performance information to assess the effectiveness of programs and develop budget priorities.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.3.2", name: "Capital Planning Information Type", description: "Capital Planning involves the processes for ensuring that appropriate investments are selected for capital expenditures.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.3.3", name: "Enterprise Architecture Information Type", description: "Enterprise Architecture is an established process for describing the current state and defining the target state and transition strategy for an organization’s people, processes, and technology.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.3.4", name: "Strategic Planning Information Type", description: "Strategic Planning entails the determination of long-term goals and the identification of the best approach for achieving those goals.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.3.5", name: "Budget Execution Information Type", description: "Budget Execution involves day-to-day requisitions and obligations for agency expenditures,invoices, billing dispute resolution, reconciliation, service level agreements, and distributions of shared expenses.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.3.6", name: "Workforce Planning Information Type", description: "Workforce Planning involves the processes for identifying the workforce competencies required to meet the agency’s strategic goals and for developing the strategies to meet these requirements.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.3.7", name: "Management Improvement Information Type", description: "Management Improvement includes all efforts to gauge the ongoing efficiency of business processes and identify opportunities for reengineering or restructuring.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.3.8", name: "Budget and Performance Integration Information Type", description: "Budget and Performance Integration involves activities that align Federal resources allocated through budget formulation, execution, and management actions with examinations of program objectives, performance, and demonstrated results such as Program Performance Assessments, Government Performance Results Act (GPRA) plans and reports, performance-based agency budget submissions, and Financial Management Cost Accounting and Performance Measurement data.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.3.9", name: "Tax and Fiscal Policy Information Type", description: "Tax and Fiscal Policy encompasses analysis of the implications for economic growth and stability in the United States and the world of Federal tax and spending policies. This includes assessing the sustainability of current programs and policies, the best means for raising revenues, the distribution of tax liabilities, and the appropriate limits on debt.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},
  
  // C.2.4 Internal Risk Management and Mitigation
  { category: "C.2.4", name: "Internal Risk Management and Mitigation", description: "Internal risk management and mitigation involves all activities relating to the processes of analyzing exposure to risk and determining appropriate counter-measures.  Note that risks to information and information systems associated with internal risk management and mitigation activities may inherently affect the resistance to compromise/damage and recovery from damage with respect to a broad range of critical infrastructures and key national assets.", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.2.4.1", name: "Contingency Planning Information Type", description: "Contingency planning involves the actions required to plan for, respond to, and mitigate damaging events.", 
      confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "C.2.4.2", name: "Continuity of Operations Information Type", description: "Continuity of operations involves the activities associated with the identification of critical systems and processes, and the planning and preparation required to ensure that these systems and processes will be available in the event of a catastrophic event.", 
      confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "C.2.4.3", name: "Service Recovery Information Type", description: "Service recovery involves the internal actions necessary to develop a plan for resuming operations after a catastrophe occurs, such as a fire or earthquake.", 
      confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},
  
  // C.2.5 Revenue Collection
  { category: "C.2.5", name: "Revenue Collection", description: "Revenue Collection includes the collection of Government income from all sources. Note: Tax collection is accounted for under the Taxation Management information type in the General Government mission area. ", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.2.5.1", name: "Debt Collection Information Type", description: "Debt Collection supports activities associated with the collection of money owed to the United States government from both foreign and domestic sources.", 
      confidentiality: "Moderate", integrity: "Low", availability: "Low" },
    { category: "C.2.5.2", name: "User Fee Collection Information Type", description: "User fee Collection involves the collection of fees assessed on individuals or organizations for the provision of Government services and for the use of Government goods or resources (i.e. National Parks).", 
      confidentiality: "Low", integrity: "Low", availability: "Moderate" },
    { category: "C.2.5.3", name: "Federal Asset Sales Information Type", description: "Federal Asset Sales encompasses the activities associated with the acquisition, oversight, tracking, and sale of non-internal assets managed by the Federal Government with a commercial value and sold to the private sector. ", 
      confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.2.6 Public Affairs
  { category: "C.2.6", name: "Public Affairs", description: "Public Affairs activities involve the exchange of information and communication between the Federal Government, citizens and stakeholders in direct support of citizen services, public policy, and/or national interest. ", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.2.6.1", name: "Customer Services Information Type", description: "Customer Service supports activities associated with providing and managing the delivery of information and support to the government’s customers.", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.6.2", name: "Official Information Dissemination Information Type", description: "Official Information Dissemination includes all efforts to provide official government information to external stakeholders through the use of various types of media, such as video, paper, web, etc. ", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.6.3", name: "Product Outreach Information Type", description: "Product Outreach relates to the marketing of government services products, and programs to the general public in an attempt to promote awareness and increase the number of customers/beneficiaries of those services and programs.", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.6.4", name: "Public Relations Information Type", description: "Public Relations activities involve the efforts to promote an organizations image through the effective handling of citizen concerns.", 
    confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},
  
  // C.2.7 Legislative Relations
  { category: "C.2.7", name: "Legislative Relations", description: "Legislative Relations involves activities aimed at the development, tracking, and amendment of public laws through the legislative branch of the Federal Government. ", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.2.7.1", name: "Legislation Tracking Information Type", description: "Legislation Tracking involves following legislation from conception to adoption.", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.7.2", name: "Legislation Testimony Information Type", description: "Legislation Testimony involves activities associated with providing testimony/evidence in support or, or opposition to, legislation from conception to adoption.", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.7.3", name: "Proposal Development Information Type", description: "Proposal Development involves drafting proposed legislation that creates or amends laws subject to Congressional legislative action.", 
    confidentiality: "Moderate", integrity: "Low", availability: "Low" },
    { category: "C.2.7.4", name: "Congressional Liaison Operations Information Type", description: "Congressional Liaison Operations involves all activities associated with supporting the formal relationship between a Federal Agency and the U.S. Congress.", 
    confidentiality: "Moderate", integrity: "Low", availability: "Low" }
  ]},
  
  // C.2.8 General Government
  { category: "C.2.8", name: "General Government", description: "General Government involves the overhead costs of the Federal Government, including legislative and executive activities; provision of central fiscal, personnel, and property activities; and the provision of services that cannot reasonably be classified in any other service support area. As a normal rule, all activities reasonably or closely associated with other service support areas or information types shall be included in those service support areas or information types rather than listed as a part of general government. This service support area is reserved for central government management operations; most service delivery (mission-based) management activities would not be included here.  Unlike the other service support functions, some general government information types are associated with specific organizations (e.g., Department of the Treasury, Executive Office of the President, Internal Revenue Service). ", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.2.8.1", name: "Central Fiscal Operations Information Type", description: "Central Fiscal Operations includes the fiscal operations that the Department of Treasury performs on behalf of the Government. [Note: Tax-related functions are associated with the Taxation Management information type.]  Impacts to some information and information systems associated with central fiscal operations may affect the security of the critical banking and finance infrastructure. In most cases, the effect on public welfare of a loss of central fiscal operations functionality can be expected to be delayed rather than immediate.  The potential for consequent loss of human life or of major national assets is low.", 
    confidentiality: "Moderate", integrity: "Low", availability: "Low" },
    { category: "C.2.8.2", name: "Legislative Functions Information Type", description: "Legislative functions include the service support activities associated with costs of the Legislative Branch other than the Tax Court, the Library of Congress, and the Government Printing Office revolving fund.", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.8.3", name: "Executive Functions Information Type", description: "Information supporting executive functions", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.8.4", name: "Central Property Management Information Type", description: "Central Property Management involves most of the operations of the General Services Administration. The following recommended provisional security categorization of central property management information is particularly subject to change where critical infrastructure elements or key national assets are involved", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.8.5", name: "Central Personnel Management Information Type", description: "Central Personnel Management involves most of the operating activities of the Office of Personnel Management and related agencies. ", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.2.8.6", name: "Taxation Management Information Type", description: "Taxation Management includes activities associated with the implementation of the Internal Revenue Code and the collection of taxes in the United States and abroad.", 
    confidentiality: "Moderate", integrity: "Low", availability: "Low" },
    { category: "C.2.8.7", name: "Central Records and Statistics Management Information Type", description: "Central Records and Statistics Management involves the operations surrounding the management of official documents, statistics, and records for the entire Federal Government. This information type is intended to include information and information systems associated with the management of records and statistics for the Federal government as a whole, such as the records management performed by NARA or the statistics and data collection performed by the Bureau of the Census.  Note: Many agencies perform records and statistics management for a particular business function and as such should be mapped to the service support, management, or mission area associated with that business function. The central records and statistics management information type is intended for functions performed on behalf of the entire Federal government.", 
    confidentiality: "Moderate", integrity: "Low", availability: "Low" },
    { category: "C.2.8.8", name: "Income Information Information Type", description: "Income information includes all the wages, self-employment earnings, savings data and other financial resources information that is needed to help determine the amount of Retirement, Survivor, or Disability benefits that individuals may be entitled to receive or not receive from the Supplementary Security Income or RSDI Title II Programs.  In most cases, the impact levels are based on the effects of unauthorized disclosure, modification, or loss of availability of income information on the ability of the Federal government to identify citizen entitlements and obligations and to protect individuals against identity theft and the Federal government against fraud.", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "C.2.8.9", name: "Personal Identity and Authentication Information Information Type", description: "Personal identity and authentication information includes that information necessary to ensure that all persons who are potentially entitled to receive any federal benefit are enumerated and identified so that Federal agencies can have reasonable assurance that they are paying or communicating with the right individuals.  This information include individual citizen’s Social Security Numbers, names, dates of birth, places of birth, parents’ names, etc.", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "C.2.8.10", name: "Entitlement Event Information Information Type", description: "Entitlement event information includes information about events such as death and date of occurrence, date of a disabling event and the relating data that can reasonably prove the severity of such disability, proof of age for retirement benefits, birth and relationship of spouse and/or children who may be entitled to benefits only as auxiliaries of the primary beneficiary, and other related information needed to process a claim for benefits.  This also includes means-related information required to administer all the means related benefits associated with the Title XVI (Supplementary Security Income Program) and the new drug provisions of the recently revised Medicare Program.", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "C.2.8.11", name: "Representative Payee Information Information Type", description: "Representative payee information includes the information required to determine the need for representative payees and the data that is gathered to make the determination of who should serve as the representative payee for all beneficiaries of federal benefits who are unable to manage their own funds.  This also includes accountability information required to provide reasonable assurance that the funds are being used appropriately for the well being of entitled individuals.", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "C.2.8.12", name: "General Information Information Type", description: "An additional management and support sub-function information type has been defined to address General Information as a catch-all information type that may not be defined by the FEA BRM.  As such, agencies may find it necessary to identify additional information types not defined in the BRM and assign impact levels to those types.  Agency personnel may uniquely identify information types using a FIPS process to identify information not contained neatly in the FEA BRM. Not all of these information types are likely to have the same impact levels. The impacts to some information types will jeopardize system functionality and the agency mission more than other information types", 
    confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},
  
  // C.3.1 Administrative Management
  { category: "C.3.1", name: "Administrative Management", description: "Administrative Management involves the day-to-day management and maintenance of the internal infrastructure.  Administrative information is usually routine and is relatively low impact.  However, some administrative management information is either very sensitive (e.g., logistics management for nuclear or other hazardous materials, security management information, and security clearance management information) or critical (e.g., inventory control and logistics management information needed to support time-critical operations). National security information is outside the scope of this guideline.  [See Appendix A, Glossary of Terms, for a definition of national security information/systems.]  Routine administrative management information systems that do not process classified information are not usually designated national security systems, even if they are critical to the direct fulfillment of military or intelligence missions. ", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.3.1.1", name: "Facilities, Fleet, and Equipment Management Information Type", description: "Facilities, Fleet, and Equipment management involves the maintenance, administration, certification, and operation of office buildings, fleets, machinery, and other capital assets considered as possessions of the Federal government.  Impacts to some information and information systems associated with facilities, fleet, and equipment management may affect the security of some key national assets (e.g., nuclear power plants, dams, and other government facilities).", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.1.2", name: "Help Desk Services Information Type", description: "Help Desk Services involves the management of a service center to respond to government employees' technical and administrative questions.", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.1.3", name: "Security Management Information Type", description: "Security Management involves the physical protection of an organization’s personnel, assets, and facilities (including security clearance management). Impacts to some information and information systems associated with security management may affect the security of some critical infrastructure elements and key national assets (e.g., nuclear power plants, dams, and  other government facilities).  Impact levels associated with security information directly relate to the potential threat to human life associated with the asset(s) being protected (e.g., consequences to the public of terrorist access to dams or nuclear power plants). ", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Low" },
    { category: "C.3.1.4", name: "Travel Information Type", description: "Travel involves the activities associated with planning, preparing, and monitoring of business related travel for an organization’s employees.", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.1.5", name: "Workplace Policy Development and Management Information Type", description: "Workplace policy development and management includes all activities required to develop and disseminate workplace policies such as dress codes, time reporting requirements, telecommuting, etc. ", 
    confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},
  
  // C.3.2 Financial Management
  { category: "C.3.2", name: "Financial Management", description: "Financial management involves the aggregate set of accounting practices and procedures that allow for the accurate and effective handling of all government revenues, funding, and expenditures.  Confidentiality impacts associated with financial management information are generally associated with the sensitivity of the existence of specific projects, programs, and/or technologies that might be revealed by unauthorized disclosure of information.  For integrity, temporary successful frauds can affect agency image, and corrective actions are often disruptive to agency operations.  Permanent loss/unavailability of financial management information can cripple agency operations. ", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.3.2.1", name: "Assets and Liability Management Information Type", description: "Assets and Liability Management provide accounting support for the management of assets and liabilities of the Federal government.  Assets and liability management activities measure the total cost and revenue of Federal programs, and their various elements, activities and outputs.  Assets and liability management is essential for providing accurate program measurement information, performance measures, and financial statements with verifiable reporting of the cost of activities.", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.2.2", name: "Reporting and Information Information Type", description: "Reporting and Information includes providing financial information, reporting and analysis of financial transactions.  Financial reporting includes the activities necessary to support: management’s fiduciary role; budget formulation and execution functions; fiscal management of program delivery and program decision making; and internal and external reporting requirements. ", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.3", name: "Funds Control Information Type", description: "Funds Control includes the management of the Federal budget process including the development of plans and programs, budgets, and performance outputs as well as financing Federal programs and operations through appropriation and apportionment of direct and reimbursable spending authority, fund transfers, investments and other financing mechanisms.  Funds control management includes the establishment of a system for ensuring an organization does not obligate or disburse funds in excess of those appropriated or authorized. ", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Low" },
    //stopped here
    { category: "C.3.2.4", name: "Accounting Information Type", description: "Information supporting accounting operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.5", name: "Payments Information Type", description: "Information supporting payment processing", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.6", name: "Collections and Receivables Information Type", description: "Information supporting collections and receivables management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.2.7", name: "Cost Accounting/Performance Measurement Information Type", description: "Information supporting cost accounting and performance measurement", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" }
  ]},
  
  // C.3.3 Human Resource Management
  { category: "C.3.3", name: "Human Resource Management", description: "Human resources management and personnel operations", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.3.3.1", name: "HR Strategy Information Type", description: "Information supporting HR strategy development", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.3.2", name: "Staff Acquisition Information Type", description: "Information supporting staff acquisition processes", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.3.3", name: "Organization & Position Management Information Type", description: "Information supporting organization and position management", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.3.4", name: "Compensation Management Information Type", description: "Information supporting compensation management", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.3.5", name: "Benefits Management Information Type", description: "Information supporting benefits management", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.3.6", name: "Employee Performance Management Information Type", description: "Information supporting employee performance management", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.3.7", name: "Employee Relations Information Type", description: "Information supporting employee relations", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.3.8", name: "Labor Relations Information Type", description: "Information supporting labor relations", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.3.9", name: "Separation Management Information Type", description: "Information supporting separation management", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.3.10", name: "Human Resources Development Information Type", description: "Information supporting human resources development", 
    confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},
  
  // C.3.4 Supply Chain Management
  { category: "C.3.4", name: "Supply Chain Management", description: "Supply chain and procurement operations", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.3.4.1", name: "Goods Acquisition Information Type", description: "Information supporting goods acquisition", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.4.2", name: "Inventory Control Information Type", description: "Information supporting inventory control operations", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.4.3", name: "Logistics Management Information Type", description: "Information supporting logistics management", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.4.4", name: "Services Acquisition Information Type", description: "Information supporting services acquisition", 
    confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},
  
  // C.3.5 Information and Technology Management
  { category: "C.3.5", name: "Information and Technology Management", description: "Information technology and systems management", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "C.3.5.1", name: "System Development Information Type", description: "Information supporting system development activities", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.2", name: "Lifecycle/Change Management Information Type", description: "Information supporting lifecycle and change management", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.3", name: "System Maintenance Information Type", description: "Information supporting system maintenance operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.4", name: "IT Infrastructure Maintenance Information Type", description: "Information supporting IT infrastructure maintenance", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.5.5", name: "Information Security Information Type", description: "Information supporting information security operations", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.6", name: "Record Retention Information Type", description: "Information supporting record retention processes", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "C.3.5.7", name: "Information Management Information Type", description: "Information supporting information management activities", 
    confidentiality: "Low", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.8", name: "System and Network Monitoring Information Type", description: "Information supporting system and network monitoring", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Low" },
    { category: "C.3.5.9", name: "Information Sharing Information Type", description: "Information supporting information sharing activities", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A" }
  ]},
  
  // D.1 Defense and National Security
  { category: "D.1", name: "Defense and National Security", description: "Information supporting defense and national security operations", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A" },
  
  // D.2 Homeland Security
  { category: "D.2", name: "Homeland Security", description: "Information supporting homeland security operations", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "D.2.1", name: "Border and Transportation Security Information Type", description: "Information supporting border and transportation security", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.2.2", name: "Key Asset and Critical Infrastructure Protection Information Type", description: "Information supporting key asset and critical infrastructure protection", 
    confidentiality: "High", integrity: "High", availability: "High" },
    { category: "D.2.3", name: "Catastrophic Defense Information Type", description: "Information supporting catastrophic defense operations", 
    confidentiality: "High", integrity: "High", availability: "High" },
    { category: "D.2.4", name: "Executive Functions of the Executive Office of the President Information Type", description: "Information supporting EOP executive functions", 
    confidentiality: "High", integrity: "Moderate", availability: "High" }
  ]},
  
  // D.3 Intelligence Operations
  { category: "D.3", name: "Intelligence Operations", description: "Information supporting intelligence operations", 
    confidentiality: "High", integrity: "High", availability: "High" },
  
  // D.4 Disaster Management
  { category: "D.4", name: "Disaster Management", description: "Information supporting disaster management operations", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "D.4.1", name: "Disaster Monitoring and Prediction Information Type", description: "Information supporting disaster monitoring and prediction", 
    confidentiality: "Low", integrity: "High", availability: "High" },
    { category: "D.4.2", name: "Disaster Preparedness and Planning Information Type", description: "Information supporting disaster preparedness and planning", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "D.4.3", name: "Disaster Repair and Restoration Information Type", description: "Information supporting disaster repair and restoration", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "D.4.4", name: "Emergency Response Information Type", description: "Information supporting emergency response operations", 
    confidentiality: "Low", integrity: "High", availability: "High" }
  ]},
  
  // Additional D categories (abbreviated for space - would include full structure)
  { category: "D.5", name: "International Affairs and Commerce", description: "Information supporting international affairs and commerce", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "D.5.1", name: "Foreign Affairs Information Type", description: "Information supporting foreign affairs operations", 
    confidentiality: "High", integrity: "High", availability: "Moderate" },
    { category: "D.5.2", name: "International Development and Humanitarian Aid Information Type", description: "Information supporting international development and humanitarian aid", 
    confidentiality: "Moderate", integrity: "Low", availability: "Low" },
    { category: "D.5.3", name: "Global Trade Information Type", description: "Information supporting global trade operations", 
    confidentiality: "High", integrity: "High", availability: "High" }
  ]},
  
  { category: "D.6", name: "Natural Resources", description: "Information supporting natural resources management", 
    confidentiality: "N/A", integrity: "N/A", availability: "N/A", subtypes: [
    { category: "D.6.1", name: "Water Resources Management Information Type", description: "Information supporting water resources management", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "D.6.2", name: "Conservation, Marine and Land Management Information Type", description: "Information supporting conservation, marine and land management operations", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "D.6.3", name: "Recreational Resource Management and Tourism Information Type", description: "Information supporting recreational resource management and tourism operations", 
    confidentiality: "Low", integrity: "Low", availability: "Low" },
    { category: "D.6.4", name: "Agricultural Innovation and Services Information Type", description: "Information supporting agricultural innovation and services", 
    confidentiality: "Low", integrity: "Low", availability: "Low" }
  ]},

  { category: "D.7", name: "Energy", description: "Information supporting energy operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.8", name: "Environmental Management", description: "Information supporting environmental management", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.9", name: "Economic Development", description: "Information supporting economic development", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.10", name: "Community and Social Services", description: "Information supporting community and social services", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.11", name: "Transportation", description: "Information supporting transportation operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.12", name: "Education", description: "Information supporting education operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.13", name: "Workforce Management", description: "Information supporting workforce management", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.14", name: "Health", description: "Information supporting health operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.15", name: "Income Security", description: "Information supporting income security operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.16", name: "Law Enforcement", description: "Information supporting law enforcement operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.17", name: "Litigation and Judicial Activities", description: "Information supporting litigation and judicial activities", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.18", name: "Federal Correctional Activities", description: "Information supporting federal correctional activities", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.19", name: "General Sciences and Innovation", description: "Information supporting general sciences and innovation", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.20", name: "Knowledge Creation and Management", description: "Information supporting knowledge creation and management", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.21", name: "Regulatory Compliance and Enforcement", description: "Information supporting regulatory compliance and enforcement", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.22", name: "Public Goods Creation and Management", description: "Information supporting public goods creation and management", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.23", name: "Federal Financial Assistance", description: "Information supporting federal financial assistance", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.24", name: "Credit and Insurance", description: "Information supporting credit and insurance operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.25", name: "Transfers to State/Local Governments", description: "Information supporting transfers to state/local governments", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
  { category: "D.26", name: "Direct Services for Citizens", description: "Information supporting direct services for citizens", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate", subtypes: [
    { category: "D.26.1", name: "Military Operations Information Type", description: "Information supporting military operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" },
    { category: "D.26.2", name: "Civilian Operations Information Type", description: "Information supporting civilian operations", 
    confidentiality: "Moderate", integrity: "Moderate", availability: "Moderate" }
  ]}
];

// Use validated NIST SP 800-53B baselines
const SECURITY_CONTROL_BASELINES = NIST_CONTROL_BASELINES;

// Control descriptions and mappings
const CONTROL_DETAILS: { [key: string]: AutoGeneratedRequirement} = {
  "AC-1": {
    controlId: "AC-1",
    controlFamily: "AC",
    title: "Access Control Policy and Procedures",
    description: "The organization develops, documents, and disseminates an access control policy and implements access control procedures.",
    priority: "High",
    nistFunction: "Protect",
    rmfStep: "Select"
  },
  "AC-2": {
    controlId: "AC-2",
    controlFamily: "AC",
    title: "Account Management",
    description: "The organization manages information system accounts including establishing, activating, modifying, disabling, and removing accounts.",
    priority: "High",
    nistFunction: "Protect",
    rmfStep: "Implement"
  },
  "AC-3": {
    controlId: "AC-3",
    controlFamily: "AC",
    title: "Access Enforcement",
    description: "The information system enforces approved authorizations for logical access to information and system resources.",
    priority: "High",
    nistFunction: "Protect",
    rmfStep: "Implement"
  },
  // Add more control details as needed...
};

export default function SystemCategorization({ systemCategorizations, onUpdate, onGenerateRequirements, onNavigateToNext }: CategorizationProps) {
  const [isFormOpen, setIsFormOpen] = useState(false);
  const [editingId, setEditingId] = useState<string | null>(null);
  const [showRequirements, setShowRequirements] = useState<string | null>(null);
  const [formData, setFormData] = useState<Partial<SystemCategorizationType>>({
    systemName: '',
    systemDescription: '',
    informationTypes: [],
    rationale: ''
  });

  // Helper to calculate overall categorization from informationTypes
  const getOverallCategorization = (types: InformationType[] = []): {
    confidentiality: 'High' | 'Moderate' | 'Low';
    integrity: 'High' | 'Moderate' | 'Low';
    availability: 'High' | 'Moderate' | 'Low';
  } => {
    if (!types.length) {
      return {
        confidentiality: 'Low',
        integrity: 'Low',
        availability: 'Low',
      };
    }
    const getHighestImpact = (impacts: string[]): 'High' | 'Moderate' | 'Low' => {
      if (impacts.includes('High')) return 'High';
      if (impacts.includes('Moderate')) return 'Moderate';
      return 'Low';
    };
    return {
      confidentiality: getHighestImpact(types.map(t => t.confidentialityImpact)),
      integrity: getHighestImpact(types.map(t => t.integrityImpact)),
      availability: getHighestImpact(types.map(t => t.availabilityImpact)),
    };
  };

  // Always derive overallCategorization from informationTypes
  const overallCategorization = getOverallCategorization(formData.informationTypes || []);

  // Automatically calculate overall categorization whenever information types change
  useEffect(() => {
    if (formData.informationTypes && formData.informationTypes.length > 0) {
      calculateOverallImpact();
    }
  }, [formData.informationTypes]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (editingId) {
      const updated = systemCategorizations.map(cat => 
        cat.id === editingId 
          ? { ...cat, ...formData, overallCategorization, updatedAt: new Date() }
          : cat
      );
      onUpdate(updated);
    } else {
      const newCategorization: SystemCategorizationType = {
        id: Date.now().toString(),
        systemName: formData.systemName!,
        systemDescription: formData.systemDescription!,
        informationTypes: formData.informationTypes!,
        overallCategorization,
        rationale: formData.rationale!,
        createdAt: new Date(),
        updatedAt: new Date()
      };
      onUpdate([...systemCategorizations, newCategorization]);
    }

    resetForm();
  };

  const handleEdit = (categorization: SystemCategorizationType) => {
    setFormData(categorization);
    setEditingId(categorization.id);
    setIsFormOpen(true);
  };

  const handleDelete = (id: string) => {
    if (confirm('Are you sure you want to delete this system categorization?')) {
      onUpdate(systemCategorizations.filter(cat => cat.id !== id));
    }
  };

  const resetForm = () => {
    setFormData({
      systemName: '',
      systemDescription: '',
      informationTypes: [],
      rationale: ''
    });
    setEditingId(null);
    setIsFormOpen(false);
  };

  // Print/Export to PDF (more reliable than PNG)
  const exportToPDF = (categorization: SystemCategorizationType) => {
    const element = document.getElementById(`categorization-${categorization.id}`);
    if (!element) {
      console.error('Element not found for export');
      return;
    }

    try {
      // Clone the element to modify it for printing
      const printWindow = window.open('', '_blank');
      if (!printWindow) {
        alert('Please allow popups to export the categorization.');
        return;
      }

      // Create HTML document for printing
      const htmlContent = `
        <!DOCTYPE html>
        <html>
          <head>
            <title>${categorization.systemName} - System Categorization</title>
            <style>
              @page {
                size: letter;
                margin: 0.5in;
              }
              
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
                margin: 0;
                padding: 20px;
                background: white;
              }
              
              * {
                box-sizing: border-box;
              }
              
              .print-header {
                text-align: center;
                margin-bottom: 30px;
                padding-bottom: 20px;
                border-bottom: 2px solid #1f2937;
              }
              
              .print-header h1 {
                margin: 0 0 10px 0;
                color: #1f2937;
                font-size: 24px;
              }
              
              .print-header p {
                margin: 0;
                color: #6b7280;
                font-size: 14px;
              }
              
              table {
                width: 100%;
                border-collapse: collapse;
                margin-bottom: 20px;
                page-break-inside: avoid;
              }
              
              th, td {
                border: 1px solid #d1d5db;
                padding: 12px;
                text-align: left;
              }
              
              th {
                background-color: #f3f4f6;
                font-weight: 600;
                color: #1f2937;
                font-size: 13px;
              }
              
              td {
                font-size: 12px;
                color: #374151;
              }
              
              .section-title {
                font-size: 16px;
                font-weight: 600;
                color: #1f2937;
                margin: 25px 0 12px 0;
                padding-bottom: 8px;
                border-bottom: 1px solid #e5e7eb;
              }
              
              .impact-badge {
                display: inline-block;
                padding: 4px 12px;
                border-radius: 4px;
                font-weight: 500;
                font-size: 11px;
                text-align: center;
              }
              
              .impact-low {
                background-color: #dcfce7;
                color: #166534;
              }
              
              .impact-moderate {
                background-color: #fef3c7;
                color: #92400e;
              }
              
              .impact-high {
                background-color: #fee2e2;
                color: #991b1b;
              }
              
              .info-type-name {
                font-weight: 600;
                color: #1f2937;
                margin-bottom: 4px;
              }
              
              .info-type-category {
                font-size: 11px;
                color: #6b7280;
              }
              
              .justification {
                background-color: #eff6ff;
                border-left: 3px solid #3b82f6;
                padding: 8px 12px;
                margin-top: 8px;
                font-size: 11px;
              }
              
              .justification-label {
                font-weight: 600;
                color: #1e40af;
                margin-bottom: 4px;
              }
              
              .baseline-summary {
                background-color: #eff6ff;
                border: 1px solid #3b82f6;
                padding: 15px;
                border-radius: 4px;
                margin-top: 15px;
              }
              
              .baseline-summary strong {
                color: #1e40af;
              }
              
              @media print {
                body {
                  padding: 0;
                }
                
                .no-print {
                  display: none !important;
                }
              }
            </style>
          </head>
          <body>
            <div class="print-header">
              <h1>${categorization.systemName}</h1>
              <p>System Security Categorization Report</p>
              <p style="margin-top: 5px; font-size: 12px;">Generated: ${new Date().toLocaleString()}</p>
            </div>
            
            <div>
              <p style="margin-bottom: 20px; font-size: 13px;"><strong>System Description:</strong> ${categorization.systemDescription}</p>
              
              ${categorization.informationTypes.length > 0 ? `
                <h2 class="section-title">3.2.1 Identification of Information Types</h2>
                <p style="font-size: 12px; margin-bottom: 10px;"><strong>Table 3-3.</strong> Provisional Information Types & Security Impact Levels</p>
                <table>
                  <thead>
                    <tr>
                      <th style="width: 40%;">Information Type</th>
                      <th style="width: 20%; text-align: center;">Confidentiality Impact</th>
                      <th style="width: 20%; text-align: center;">Integrity Impact</th>
                      <th style="width: 20%; text-align: center;">Availability Impact</th>
                    </tr>
                  </thead>
                  <tbody>
                    ${categorization.informationTypes.map(infoType => `
                      <tr>
                        <td colspan="4">
                          <div class="info-type-name">${infoType.category} - ${infoType.name}</div>
                          <div class="info-type-category">${infoType.description || ''}</div>
                          ${infoType.rationale ? `
                            <div class="justification">
                              <div class="justification-label">Justification:</div>
                              <div>${infoType.rationale}</div>
                            </div>
                          ` : ''}
                        </td>
                      </tr>
                      <tr>
                        <td></td>
                        <td style="text-align: center;">
                          <span class="impact-badge impact-${infoType.confidentialityImpact.toLowerCase()}">${infoType.confidentialityImpact}</span>
                        </td>
                        <td style="text-align: center;">
                          <span class="impact-badge impact-${infoType.integrityImpact.toLowerCase()}">${infoType.integrityImpact}</span>
                        </td>
                        <td style="text-align: center;">
                          <span class="impact-badge impact-${infoType.availabilityImpact.toLowerCase()}">${infoType.availabilityImpact}</span>
                        </td>
                      </tr>
                    `).join('')}
                  </tbody>
                </table>
              ` : ''}
              
              ${(() => {
                const adjustedTypes = getAdjustedInformationTypes(categorization.informationTypes);
                if (adjustedTypes.length === 0) return '';
                
                return `
                  <h2 class="section-title">3.2.2 Adjusted Security Impact Levels</h2>
                  <p style="font-size: 12px; margin-bottom: 10px;"><strong>Table 3-4.</strong> Adjusted Information Types & Security Impact Levels</p>
                  <div style="background-color: #fef3c7; border: 1px solid #fbbf24; padding: 10px; border-radius: 4px; margin-bottom: 10px;">
                    <p style="font-size: 11px; margin: 0; color: #92400e;">
                      <strong>⚠️ Manual Adjustments:</strong> The following information types have been manually adjusted from NIST SP 800-60 recommendations. 
                      Justifications for these adjustments should be documented.
                    </p>
                  </div>
                  <table>
                    <thead>
                      <tr>
                        <th style="width: 35%;">Information Type</th>
                        <th style="width: 20%; text-align: center;">Security Objective</th>
                        <th style="width: 22.5%; text-align: center;">NIST Recommended</th>
                        <th style="width: 22.5%; text-align: center;">Adjusted To</th>
                      </tr>
                    </thead>
                    <tbody>
                      ${adjustedTypes.map(infoType => {
                        const adjustments = [];
                        if (infoType.nistRecommendedConfidentiality && infoType.confidentialityImpact !== infoType.nistRecommendedConfidentiality) {
                          adjustments.push({
                            objective: 'Confidentiality',
                            nist: infoType.nistRecommendedConfidentiality,
                            adjusted: infoType.confidentialityImpact
                          });
                        }
                        if (infoType.nistRecommendedIntegrity && infoType.integrityImpact !== infoType.nistRecommendedIntegrity) {
                          adjustments.push({
                            objective: 'Integrity',
                            nist: infoType.nistRecommendedIntegrity,
                            adjusted: infoType.integrityImpact
                          });
                        }
                        if (infoType.nistRecommendedAvailability && infoType.availabilityImpact !== infoType.nistRecommendedAvailability) {
                          adjustments.push({
                            objective: 'Availability',
                            nist: infoType.nistRecommendedAvailability,
                            adjusted: infoType.availabilityImpact
                          });
                        }
                        
                        return adjustments.map((adj, adjIdx) => `
                          <tr>
                            ${adjIdx === 0 ? `
                              <td rowspan="${adjustments.length}">
                                <div class="info-type-name">${infoType.category} - ${infoType.name}</div>
                                ${infoType.rationale ? `
                                  <div class="justification">
                                    <div class="justification-label">Justification:</div>
                                    <div>${infoType.rationale}</div>
                                  </div>
                                ` : ''}
                              </td>
                            ` : ''}
                            <td style="text-align: center; font-weight: 600;">${adj.objective}</td>
                            <td style="text-align: center;">
                              <span class="impact-badge impact-${adj.nist.toLowerCase()}">${adj.nist}</span>
                            </td>
                            <td style="text-align: center;">
                              <span style="color: #9ca3af; font-size: 16px; margin-right: 4px;">→</span>
                              <span class="impact-badge impact-${adj.adjusted.toLowerCase()}">${adj.adjusted}</span>
                            </td>
                          </tr>
                        `).join('');
                      }).join('')}
                    </tbody>
                  </table>
                `;
              })()}
              
              ${categorization.rationale ? `
                <h2 class="section-title">3.2.3 Additional Adjustments Rationale</h2>
                <div style="background-color: #f9fafb; border: 1px solid #d1d5db; padding: 12px; border-radius: 4px;">
                  <p style="font-size: 12px; margin: 0;">${categorization.rationale}</p>
                </div>
              ` : ''}
              
              <h2 class="section-title">${getAdjustedInformationTypes(categorization.informationTypes).length > 0 ? '3.2.4' : '3.2.3'} Information System Security Categorization</h2>
              <p style="font-size: 12px; margin-bottom: 10px;"><strong>Table 3-5.</strong> Security Objective Impacts</p>
              <table>
                <thead>
                  <tr>
                    <th style="width: 50%;">Security Objective</th>
                    <th style="width: 50%; text-align: center;">Low, Moderate or High</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><strong>Confidentiality</strong></td>
                    <td style="text-align: center;">
                      <span class="impact-badge impact-${categorization.overallCategorization.confidentiality.toLowerCase()}">${categorization.overallCategorization.confidentiality}</span>
                    </td>
                  </tr>
                  <tr>
                    <td><strong>Integrity</strong></td>
                    <td style="text-align: center;">
                      <span class="impact-badge impact-${categorization.overallCategorization.integrity.toLowerCase()}">${categorization.overallCategorization.integrity}</span>
                    </td>
                  </tr>
                  <tr>
                    <td><strong>Availability</strong></td>
                    <td style="text-align: center;">
                      <span class="impact-badge impact-${categorization.overallCategorization.availability.toLowerCase()}">${categorization.overallCategorization.availability}</span>
                    </td>
                  </tr>
                </tbody>
              </table>
              
              <div class="baseline-summary">
                <p style="margin: 0; font-size: 13px;">
                  <strong>Security Control Baseline: ${getHighestOverallImpact(categorization.overallCategorization)}</strong>
                </p>
                <p style="margin: 8px 0 0 0; font-size: 12px;">
                  Controls Required: ${SECURITY_CONTROL_BASELINES[getHighestOverallImpact(categorization.overallCategorization)]?.length || 0}
                </p>
              </div>
            </div>
            
            <div class="no-print" style="margin-top: 30px; padding: 20px; background: #f3f4f6; border-radius: 4px; text-align: center;">
              <button onclick="window.print()" style="background: #2563eb; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 14px; margin-right: 10px;">
                Print / Save as PDF
              </button>
              <button onclick="window.close()" style="background: #6b7280; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 14px;">
                Close
              </button>
            </div>
          </body>
        </html>
      `;

      printWindow.document.write(htmlContent);
      printWindow.document.close();
      
      // Auto-focus the print window
      printWindow.focus();
    } catch (error) {
      console.error('Error exporting to PDF:', error);
      alert('Failed to export categorization. Please try again.');
    }
  };

  const addInformationType = () => {
    const newType: InformationType = {
      id: Date.now().toString(),
      name: '',
      description: '',
      category: '',
      confidentialityImpact: 'Low',
      integrityImpact: 'Low',
      availabilityImpact: 'Low'
    };
    setFormData(prev => ({
      ...prev,
      informationTypes: [...(prev.informationTypes || []), newType]
    }));
  };

  const updateInformationType = (index: number, updates: Partial<InformationType>) => {
    setFormData(prev => ({
      ...prev,
      informationTypes: prev.informationTypes?.map((type, i) => 
        i === index ? { ...type, ...updates } : type
      )
    }));
  };

  const removeInformationType = (index: number) => {
    setFormData(prev => ({
      ...prev,
      informationTypes: prev.informationTypes?.filter((_, i) => i !== index)
    }));
  };

  const calculateOverallImpact = () => {
    // No longer needed: overallCategorization is always derived
    return;
  }

  const generateSecurityRequirements = (categorization: SystemCategorizationType) => {
    const highestImpact = getHighestOverallImpact(categorization.overallCategorization);
    const controlIds = SECURITY_CONTROL_BASELINES[highestImpact] || SECURITY_CONTROL_BASELINES.Low;
    
    const requirements: SecurityRequirement[] = controlIds.map(controlId => {
      const controlDetail = CONTROL_DETAILS[controlId] || {
        controlId,
        controlFamily: controlId.split('-')[0],
        title: `${controlId} - Security Control`,
        description: `Implementation of NIST SP 800-53 control ${controlId}`,
        priority: 'Medium' as const,
        nistFunction: 'Protect' as const,
        rmfStep: 'Select' as const
      };

      return {
        id: `${categorization.id}-${controlId}-${Date.now()}`,
        title: controlDetail.title,
        description: controlDetail.description,
        source: `NIST SP 800-53 (${highestImpact} Baseline)`,
        category: getControlCategory(controlDetail.controlFamily),
        priority: controlDetail.priority,
        status: 'Draft' as const,
        nistFunction: controlDetail.nistFunction,
        rmfStep: controlDetail.rmfStep,
        controlFamily: controlDetail.controlFamily,
        controlIdentifier: controlDetail.controlId,
        createdAt: new Date(),
        updatedAt: new Date()
      };
    });

    onGenerateRequirements(requirements);
  };

  const getHighestOverallImpact = (categorization: { confidentiality: string; integrity: string; availability: string }) => {
    const impacts = [categorization.confidentiality, categorization.integrity, categorization.availability];
    if (impacts.includes('High')) return 'High';
    if (impacts.includes('Moderate')) return 'Moderate';
    return 'Low';
  };

  const getControlCategory = (family: string) => {
    const familyMap: { [key: string]: any } = {
      'AC': 'Access Control',
      'AT': 'Authentication',
      'AU': 'Audit',
      'CA': 'Authorization',
      'CM': 'System Integrity',
      'CP': 'Incident Response',
      'IA': 'Authentication',
      'IR': 'Incident Response',
      'MA': 'System Integrity',
      'MP': 'Data Protection',
      'PE': 'Access Control',
      'PL': 'System Integrity',
      'PS': 'Access Control',
      'RA': 'System Integrity',
      'SA': 'System Integrity',
      'SC': 'Network Security',
      'SI': 'System Integrity'
    };
    return familyMap[family] || 'Other';
  };

  const getImpactColor = (impact: string) => {
    switch (impact) {
      case 'High': return 'text-red-600 bg-red-100';
      case 'Moderate': return 'text-yellow-600 bg-yellow-100';
      case 'Low': return 'text-green-600 bg-green-100';
      default: return 'text-gray-600 bg-gray-100';
    }
  };

  const getParentCategoryDisplay = (category: string) => {
    // Check if this is a subtype by looking for it in the subtypes arrays
    for (const mainType of NIST_INFORMATION_TYPES) {
      if (mainType.subtypes) {
        const subtype = mainType.subtypes.find(st => st.category === category);
        if (subtype) {
          return `${category} (under ${mainType.category} - ${mainType.name})`;
        }
      }
    }
    // If not found as a subtype, it's a main category
    return category;
  };

  // Check if an information type has been manually adjusted from NIST recommendations
  const hasAdjustedImpacts = (infoType: InformationType): boolean => {
    return !!(
      (infoType.nistRecommendedConfidentiality && infoType.confidentialityImpact !== infoType.nistRecommendedConfidentiality) ||
      (infoType.nistRecommendedIntegrity && infoType.integrityImpact !== infoType.nistRecommendedIntegrity) ||
      (infoType.nistRecommendedAvailability && infoType.availabilityImpact !== infoType.nistRecommendedAvailability)
    );
  };

  // Get adjusted information types
  const getAdjustedInformationTypes = (informationTypes: InformationType[]): InformationType[] => {
    return informationTypes.filter(infoType => hasAdjustedImpacts(infoType));
  };

  return (
    <div className="p-6">
      <div className="flex justify-between items-center mb-6">
        <div>
          <h2 className="text-2xl font-bold text-gray-900">NIST 800-60 System Categorization</h2>
          <p className="text-gray-600">Information System Security Categorization and Impact Analysis</p>
          <div className="mt-2 text-sm text-blue-600">
            <strong>Step 2:</strong> After defining design elements, categorize information types and determine security impact levels
          </div>
        </div>
        <button
          onClick={() => setIsFormOpen(true)}
          className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          <Plus className="h-4 w-4 mr-2" />
          New Categorization
        </button>
      </div>

      {/* Workflow Progress */}
      <div className="mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200">
        <div className="flex items-center justify-between text-sm">
          <div className="flex items-center space-x-4">
            <div className="flex items-center text-green-600 font-medium">
              <div className="w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-xs mr-2">✓</div>
              Design Elements
            </div>
            <div className="text-gray-400">→</div>
            <div className="flex items-center text-blue-600 font-medium">
              <div className="w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-xs mr-2">2</div>
              NIST 800-60 Categorization
            </div>
            <div className="text-gray-400">→</div>
            <div className="flex items-center text-gray-400">
              <div className="w-6 h-6 bg-gray-300 text-white rounded-full flex items-center justify-center text-xs mr-2">3</div>
              NIST 800-53 Requirements
            </div>
          </div>
          {systemCategorizations.length > 0 && (
            <div className="text-sm text-green-600 font-medium">
              ✓ {systemCategorizations.length} system{systemCategorizations.length !== 1 ? 's' : ''} categorized
            </div>
          )}
        </div>
      </div>

      {/* Form Modal */}
      {isFormOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 w-full max-w-4xl mx-4 max-h-screen overflow-y-auto">
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-lg font-semibold">
                {editingId ? 'Edit System Categorization' : 'New System Categorization'}
              </h3>
              <button onClick={resetForm} className="text-gray-500 hover:text-gray-700">
                <X className="h-5 w-5" />
              </button>
            </div>

            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    System Name *
                  </label>
                  <input
                    type="text"
                    value={formData.systemName || ''}
                    onChange={(e) => setFormData(prev => ({ ...prev, systemName: e.target.value }))}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    required
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    System Description *
                  </label>
                  <textarea
                    value={formData.systemDescription || ''}
                    onChange={(e) => setFormData(prev => ({ ...prev, systemDescription: e.target.value }))}
                    rows={2}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    required
                  />
                </div>
              </div>

              {/* Information Types */}
              <div>
                <div className="flex justify-between items-center mb-3">
                  <label className="block text-sm font-medium text-gray-700">
                    Information Types
                  </label>
                  <button
                    type="button"
                    onClick={addInformationType}
                    className="text-sm px-3 py-1 bg-blue-100 text-blue-700 rounded-md hover:bg-blue-200"
                  >
                    Add Information Type
                  </button>
                </div>

                <div className="space-y-4">
                  {formData.informationTypes?.map((infoType, index) => (
                    <div key={index} className="border rounded-lg p-4 bg-gray-50">
                      <div className="flex justify-between items-start mb-3">
                        <h4 className="font-medium text-gray-900">Information Type {index + 1}</h4>
                        <button
                          type="button"
                          onClick={() => removeInformationType(index)}
                          className="text-red-600 hover:text-red-800"
                        >
                          <Trash2 className="h-4 w-4" />
                        </button>
                      </div>

                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            NIST Category
                          </label>
                          <select
                            value={infoType.category}
                            onChange={(e) => {
                              // First check main categories
                              let selectedType = NIST_INFORMATION_TYPES.find(t => t.category === e.target.value);
                              
                              // If not found in main categories, check subtypes
                              if (!selectedType) {
                                for (const mainType of NIST_INFORMATION_TYPES) {
                                  if (mainType.subtypes) {
                                    selectedType = mainType.subtypes.find(st => st.category === e.target.value);
                                    if (selectedType) break;
                                  }
                                }
                              }
                              
                              // Auto-populate CIA values if available
                              const updateData: any = {
                                category: e.target.value,
                                name: selectedType?.name || '',
                                description: selectedType?.description || ''
                              };
                              
                              // Store NIST recommended values for tracking adjustments
                              if (selectedType?.confidentiality) {
                                updateData.confidentialityImpact = selectedType.confidentiality;
                                updateData.nistRecommendedConfidentiality = selectedType.confidentiality;
                              }
                              if (selectedType?.integrity) {
                                updateData.integrityImpact = selectedType.integrity;
                                updateData.nistRecommendedIntegrity = selectedType.integrity;
                              }
                              if (selectedType?.availability) {
                                updateData.availabilityImpact = selectedType.availability;
                                updateData.nistRecommendedAvailability = selectedType.availability;
                              }
                              
                              updateInformationType(index, updateData);
                              
                              // Recalculate overall impact if CIA values were updated
                              if (selectedType?.confidentiality || selectedType?.integrity || selectedType?.availability) {
                                setTimeout(calculateOverallImpact, 100);
                              }
                            }}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          >
                            <option value="">Select Category</option>
                            {NIST_INFORMATION_TYPES.map(type => [
                              <option key={type.category} value={type.category} style={{ fontWeight: 'bold' }}>
                                {type.category} - {type.name}
                              </option>,
                              ...(type.subtypes || []).map(subtype => (
                                <option key={subtype.category} value={subtype.category}>
                                  &nbsp;&nbsp;{subtype.category} - {subtype.name} (under {type.category} - {type.name})
                                </option>
                              ))
                            ]).flat()}
                          </select>
                        </div>
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            Name
                          </label>
                          <input
                            type="text"
                            value={infoType.name}
                            onChange={(e) => updateInformationType(index, { name: e.target.value })}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          />
                        </div>
                      </div>

                      <div className="mb-4">
                        <label className="block text-xs font-medium text-gray-700 mb-1">
                          Description
                        </label>
                        <textarea
                          value={infoType.description}
                          onChange={(e) => updateInformationType(index, { description: e.target.value })}
                          rows={2}
                          className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                        />
                      </div>

                      <div className="mb-4">
                        <label className="block text-xs font-medium text-gray-700 mb-1">
                          Justification
                        </label>
                        <textarea
                          value={infoType.rationale || ''}
                          onChange={(e) => updateInformationType(index, { rationale: e.target.value })}
                          rows={2}
                          placeholder="Provide justification for the selected impact levels..."
                          className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                        />
                      </div>

                      <div className="grid grid-cols-3 gap-4">
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            Confidentiality Impact
                            {infoType.nistRecommendedConfidentiality && (
                              <span className="ml-2 text-xs text-blue-600">
                                (NIST: {infoType.nistRecommendedConfidentiality})
                              </span>
                            )}
                          </label>
                          <select
                            value={infoType.confidentialityImpact}
                            onChange={(e) => {
                              const updates: any = { confidentialityImpact: e.target.value as any };
                              // Set NIST baseline if not already set (for legacy data)
                              if (!infoType.nistRecommendedConfidentiality) {
                                updates.nistRecommendedConfidentiality = infoType.confidentialityImpact;
                              }
                              updateInformationType(index, updates);
                              setTimeout(calculateOverallImpact, 100);
                            }}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          >
                            <option value="Low">Low</option>
                            <option value="Moderate">Moderate</option>
                            <option value="High">High</option>
                          </select>
                        </div>
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            Integrity Impact
                            {infoType.nistRecommendedIntegrity && (
                              <span className="ml-2 text-xs text-blue-600">
                                (NIST: {infoType.nistRecommendedIntegrity})
                              </span>
                            )}
                          </label>
                          <select
                            value={infoType.integrityImpact}
                            onChange={(e) => {
                              const updates: any = { integrityImpact: e.target.value as any };
                              // Set NIST baseline if not already set (for legacy data)
                              if (!infoType.nistRecommendedIntegrity) {
                                updates.nistRecommendedIntegrity = infoType.integrityImpact;
                              }
                              updateInformationType(index, updates);
                              setTimeout(calculateOverallImpact, 100);
                            }}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          >
                            <option value="Low">Low</option>
                            <option value="Moderate">Moderate</option>
                            <option value="High">High</option>
                          </select>
                        </div>
                        <div>
                          <label className="block text-xs font-medium text-gray-700 mb-1">
                            Availability Impact
                            {infoType.nistRecommendedAvailability && (
                              <span className="ml-2 text-xs text-blue-600">
                                (NIST: {infoType.nistRecommendedAvailability})
                              </span>
                            )}
                          </label>
                          <select
                            value={infoType.availabilityImpact}
                            onChange={(e) => {
                              const updates: any = { availabilityImpact: e.target.value as any };
                              // Set NIST baseline if not already set (for legacy data)
                              if (!infoType.nistRecommendedAvailability) {
                                updates.nistRecommendedAvailability = infoType.availabilityImpact;
                              }
                              updateInformationType(index, updates);
                              setTimeout(calculateOverallImpact, 100);
                            }}
                            className="w-full px-2 py-1 text-sm border border-gray-300 rounded-md"
                          >
                            <option value="Low">Low</option>
                            <option value="Moderate">Moderate</option>
                            <option value="High">High</option>
                          </select>
                        </div>
                      </div>
                      
                      {infoType.category && (
                        <div className="mt-3 p-2 bg-blue-50 border border-blue-200 rounded-md">
                          <p className="text-xs text-blue-700">
                            <span className="font-medium">📋 NIST Guidance:</span> Impact levels are auto-populated based on NIST SP 800-60 v. II, rev. 1, 2008  recommendations. 
                            You can manually adjust these values based on your specific system requirements and organizational policies.
                          </p>
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>

              {/* Overall Categorization */}
              <div className="border-t pt-4">
                <h4 className="font-medium text-gray-900 mb-3">Overall System Categorization</h4>
                <div className="mb-3 p-3 bg-blue-50 border border-blue-200 rounded-md">
                  <p className="text-sm text-blue-700">
                    <span className="font-medium">📊 Auto-Calculated:</span> Per NIST SP 800-60 v. II, rev. 1, 2008, the overall system categorization is automatically determined as the highest impact level among all information types.
                  </p>
                </div>
                <div className="grid grid-cols-3 gap-4 mb-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Confidentiality
                    </label>
                    <div className={`w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 font-medium text-center ${
                      overallCategorization.confidentiality === 'High' ? 'text-red-700 bg-red-50 border-red-300' :
                      overallCategorization.confidentiality === 'Moderate' ? 'text-yellow-700 bg-yellow-50 border-yellow-300' :
                      'text-green-700 bg-green-50 border-green-300'
                    }`}>
                      {overallCategorization.confidentiality}
                    </div>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Integrity
                    </label>
                    <div className={`w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 font-medium text-center ${
                      overallCategorization.integrity === 'High' ? 'text-red-700 bg-red-50 border-red-300' :
                      overallCategorization.integrity === 'Moderate' ? 'text-yellow-700 bg-yellow-50 border-yellow-300' :
                      'text-green-700 bg-green-50 border-green-300'
                    }`}>
                      {overallCategorization.integrity}
                    </div>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Availability
                    </label>
                    <div className={`w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 font-medium text-center ${
                      overallCategorization.availability === 'High' ? 'text-red-700 bg-red-50 border-red-300' :
                      overallCategorization.availability === 'Moderate' ? 'text-yellow-700 bg-yellow-50 border-yellow-300' :
                      'text-green-700 bg-green-50 border-green-300'
                    }`}>
                      {overallCategorization.availability}
                    </div>
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Rationale
                  </label>
                  <textarea
                    value={formData.rationale || ''}
                    onChange={(e) => setFormData(prev => ({ ...prev, rationale: e.target.value }))}
                    rows={3}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    placeholder="Explain the rationale for this categorization..."
                  />
                </div>
              </div>

              <div className="flex justify-end space-x-3 pt-4">
                <button
                  type="button"
                  onClick={resetForm}
                  className="px-4 py-2 text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
                >
                  Cancel
                </button>
                <button
                  type="submit"
                  className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                >
                  <Save className="h-4 w-4 mr-2" />
                  {editingId ? 'Update' : 'Create'}
                </button>
              </div>
            </form>
          </div>
        </div>
      )}

      {/* Categorizations List */}
      <div className="space-y-4">
        {systemCategorizations.length === 0 ? (
          <div className="bg-white rounded-lg border p-8 text-center">
            <Shield className="h-12 w-12 mx-auto mb-4 text-gray-300" />
            <p className="text-lg font-medium text-gray-900 mb-2">No System Categorizations</p>
            <p className="text-gray-500">Create a system categorization to begin security control selection.</p>
          </div>
        ) : (
          systemCategorizations.map((categorization) => (
            <div key={categorization.id} id={`categorization-${categorization.id}`} className="bg-white rounded-lg border">
              {/* Header Section */}
              <div className="bg-gray-800 text-white p-4 rounded-t-lg">
                <div className="flex justify-between items-start">
                  <div>
                    <h3 className="text-lg font-semibold">{categorization.systemName}</h3>
                    <p className="text-gray-300 text-sm mt-1">{categorization.systemDescription}</p>
                  </div>
                  <div className="flex items-center space-x-2">
                    <button
                      onClick={() => exportToPDF(categorization)}
                      className="text-white hover:text-green-300"
                      title="Export / Print as PDF"
                    >
                      <Download className="h-4 w-4" />
                    </button>
                    <button
                      onClick={() => handleEdit(categorization)}
                      className="text-white hover:text-blue-300"
                      title="Edit"
                    >
                      <Edit2 className="h-4 w-4" />
                    </button>
                    <button
                      onClick={() => handleDelete(categorization.id)}
                      className="text-white hover:text-red-300"
                      title="Delete"
                    >
                      <Trash2 className="h-4 w-4" />
                    </button>
                  </div>
                </div>
              </div>

              <div className="p-6">
                {/* Section 1: Identification of Information Types */}
                {categorization.informationTypes.length > 0 && (
                  <div className="mb-6">
                    <h4 className="text-base font-semibold text-gray-900 mb-3">
                      3.2.1 Identification of Information Types
                    </h4>
                    <div className="text-sm font-medium text-gray-700 mb-2">
                      Table 3-3. Provisional Information Types & Security Impact Levels
                    </div>
                    <div className="overflow-x-auto">
                      <table className="w-full border-collapse border border-gray-300">
                        <thead>
                          <tr className="bg-gray-100">
                            <th className="border border-gray-300 px-4 py-2 text-left text-sm font-semibold text-gray-900">
                              Information Type
                            </th>
                            <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                              Confidentiality Impact Level
                            </th>
                            <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                              Integrity Impact Level
                            </th>
                            <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                              Availability Impact Level
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          {categorization.informationTypes.map((infoType, index) => (
                            <Fragment key={`info-type-${index}`}>
                              <tr>
                                <td className="border border-gray-300 px-4 py-3">
                                  <div className="font-medium text-gray-900 text-sm">
                                    {infoType.category}-{infoType.name}
                                  </div>
                                  <div className="text-xs text-gray-600 mt-1">
                                    {getParentCategoryDisplay(infoType.category)}
                                  </div>
                                </td>
                                <td className="border border-gray-300 px-4 py-3 text-center">
                                  <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(infoType.confidentialityImpact)}`}>
                                    {infoType.confidentialityImpact}
                                  </span>
                                </td>
                                <td className="border border-gray-300 px-4 py-3 text-center">
                                  <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(infoType.integrityImpact)}`}>
                                    {infoType.integrityImpact}
                                  </span>
                                </td>
                                <td className="border border-gray-300 px-4 py-3 text-center">
                                  <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(infoType.availabilityImpact)}`}>
                                    {infoType.availabilityImpact}
                                  </span>
                                </td>
                              </tr>
                              {infoType.rationale && (
                                <tr key={`${index}-justification`}>
                                  <td colSpan={4} className="border border-gray-300 px-4 py-2 bg-blue-50">
                                    <div className="text-xs font-medium text-blue-900 mb-1">Justification:</div>
                                    <div className="text-xs text-gray-700">{infoType.rationale}</div>
                                  </td>
                                </tr>
                              )}
                            </Fragment>
                          ))}
                        </tbody>
                      </table>
                    </div>
                  </div>
                )}

                {/* Table 3-4: Adjusted Security Impact Levels (only if there are adjustments) */}
                {(() => {
                  const adjustedTypes = getAdjustedInformationTypes(categorization.informationTypes);
                  return adjustedTypes.length > 0 && (
                    <div className="mb-6">
                      <h4 className="text-base font-semibold text-gray-900 mb-3">
                        3.2.2 Adjusted Security Impact Levels
                      </h4>
                      <div className="text-sm font-medium text-gray-700 mb-2">
                        Table 3-4. Adjusted Information Types & Security Impact Levels
                      </div>
                      <div className="mb-3 p-3 bg-yellow-50 border border-yellow-200 rounded-md">
                        <p className="text-sm text-yellow-800">
                          <span className="font-medium">⚠️ Manual Adjustments:</span> The following information types have been manually adjusted from NIST SP 800-60 recommendations. 
                          Justifications for these adjustments should be documented.
                        </p>
                      </div>
                      <div className="overflow-x-auto">
                        <table className="w-full border-collapse border border-gray-300">
                          <thead>
                            <tr className="bg-gray-100">
                              <th className="border border-gray-300 px-4 py-2 text-left text-sm font-semibold text-gray-900">
                                Information Type
                              </th>
                              <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                                Security Objective
                              </th>
                              <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                                NIST Recommended
                              </th>
                              <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                                Adjusted To
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            {adjustedTypes.map((infoType, idx) => {
                              const adjustments = [];
                              if (infoType.nistRecommendedConfidentiality && infoType.confidentialityImpact !== infoType.nistRecommendedConfidentiality) {
                                adjustments.push({
                                  objective: 'Confidentiality',
                                  nist: infoType.nistRecommendedConfidentiality,
                                  adjusted: infoType.confidentialityImpact
                                });
                              }
                              if (infoType.nistRecommendedIntegrity && infoType.integrityImpact !== infoType.nistRecommendedIntegrity) {
                                adjustments.push({
                                  objective: 'Integrity',
                                  nist: infoType.nistRecommendedIntegrity,
                                  adjusted: infoType.integrityImpact
                                });
                              }
                              if (infoType.nistRecommendedAvailability && infoType.availabilityImpact !== infoType.nistRecommendedAvailability) {
                                adjustments.push({
                                  objective: 'Availability',
                                  nist: infoType.nistRecommendedAvailability,
                                  adjusted: infoType.availabilityImpact
                                });
                              }

                              return (
                                <Fragment key={`adjusted-info-type-${idx}`}>
                                  {/* Information Type Name Row */}
                                  <tr>
                                    <td colSpan={4} className="border border-gray-300 px-4 py-3">
                                      <div className="font-medium text-gray-900 text-sm">
                                        {infoType.category} - {infoType.name}
                                      </div>
                                    </td>
                                  </tr>
                                  
                                  {/* CIA Adjustment Rows */}
                                  {adjustments.map((adj, adjIdx) => (
                                    <tr key={`${idx}-${adjIdx}`}>
                                      <td className="border border-gray-300 px-4 py-3"></td>
                                      <td className="border border-gray-300 px-4 py-3 text-center font-medium text-sm">
                                        {adj.objective}
                                      </td>
                                      <td className="border border-gray-300 px-4 py-3 text-center">
                                        <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(adj.nist)}`}>
                                          {adj.nist}
                                        </span>
                                      </td>
                                      <td className="border border-gray-300 px-4 py-3 text-center">
                                        <div className="flex items-center justify-center gap-2">
                                          <span className="text-gray-400">→</span>
                                          <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(adj.adjusted)}`}>
                                            {adj.adjusted}
                                          </span>
                                        </div>
                                      </td>
                                    </tr>
                                  ))}
                                  
                                  {/* Justification Row - spans all columns */}
                                  {infoType.rationale && (
                                    <tr>
                                      <td colSpan={4} className="border border-gray-300 px-4 py-3">
                                        <div className="p-2 bg-blue-50 border border-blue-200 rounded text-xs">
                                          <div className="font-medium text-blue-900 mb-1">Justification:</div>
                                          <div className="text-gray-700">{infoType.rationale}</div>
                                        </div>
                                      </td>
                                    </tr>
                                  )}
                                </Fragment>
                              );
                            })}
                          </tbody>
                        </table>
                      </div>
                    </div>
                  );
                })()}

                {/* Section 2: Adjusting Information Types (if rationale provided) */}
                {categorization.rationale && (
                  <div className="mb-6">
                    <h4 className="text-base font-semibold text-gray-900 mb-3">
                      3.2.3 Additional Adjustments Rationale
                    </h4>
                    <div className="bg-gray-50 border border-gray-300 rounded p-4">
                      <p className="text-sm text-gray-700">{categorization.rationale}</p>
                    </div>
                  </div>
                )}

                {/* Section 3: Information System Security Categorization */}
                <div>
                  <h4 className="text-base font-semibold text-gray-900 mb-3">
                    {getAdjustedInformationTypes(categorization.informationTypes).length > 0 ? '3.2.4' : '3.2.3'} Information System Security Categorization
                  </h4>
                  <div className="text-sm text-gray-700 mb-2">
                    Table 3-5. Security Objective Impacts
                  </div>
                  <div className="overflow-x-auto">
                    <table className="w-full border-collapse border border-gray-300">
                      <thead>
                        <tr className="bg-gray-100">
                          <th className="border border-gray-300 px-4 py-2 text-left text-sm font-semibold text-gray-900">
                            Security Objective
                          </th>
                          <th className="border border-gray-300 px-4 py-2 text-center text-sm font-semibold text-gray-900">
                            Low, Moderate or High
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td className="border border-gray-300 px-4 py-3 text-sm font-medium text-gray-700">
                            Confidentiality
                          </td>
                          <td className="border border-gray-300 px-4 py-3 text-center">
                            <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(categorization.overallCategorization.confidentiality)}`}>
                              {categorization.overallCategorization.confidentiality}
                            </span>
                          </td>
                        </tr>
                        <tr>
                          <td className="border border-gray-300 px-4 py-3 text-sm font-medium text-gray-700">
                            Integrity
                          </td>
                          <td className="border border-gray-300 px-4 py-3 text-center">
                            <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(categorization.overallCategorization.integrity)}`}>
                              {categorization.overallCategorization.integrity}
                            </span>
                          </td>
                        </tr>
                        <tr>
                          <td className="border border-gray-300 px-4 py-3 text-sm font-medium text-gray-700">
                            Availability
                          </td>
                          <td className="border border-gray-300 px-4 py-3 text-center">
                            <span className={`inline-block px-3 py-1 text-sm font-medium rounded ${getImpactColor(categorization.overallCategorization.availability)}`}>
                              {categorization.overallCategorization.availability}
                            </span>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                  
                  {/* Security Control Baseline Summary */}
                  <div className="mt-4 bg-blue-50 border border-blue-200 rounded p-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <div className="text-sm font-medium text-gray-900">
                          Security Control Baseline: 
                          <span className={`ml-2 inline-block px-3 py-1 text-sm font-semibold rounded ${getImpactColor(getHighestOverallImpact(categorization.overallCategorization))}`}>
                            {getHighestOverallImpact(categorization.overallCategorization)}
                          </span>
                        </div>
                      </div>
                      <div className="text-sm text-gray-700">
                        <span className="font-medium">Controls Required:</span> {SECURITY_CONTROL_BASELINES[getHighestOverallImpact(categorization.overallCategorization)]?.length || 0}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))
        )}

        {/* Next Step Navigation */}
        {systemCategorizations.length > 0 && (
          <div className="mt-6 p-4 bg-green-50 border border-green-200 rounded-lg">
            <div className="flex items-center justify-between">
              <div>
                <h4 className="font-medium text-green-800">System Categorization Complete!</h4>
                <p className="text-sm text-green-600">Click next to automatically generate NIST 800-53 security contrls</p>
              </div>
              {onNavigateToNext && (
                <button
                  onClick={() => {
                    // Auto-generate requirements for all categorizations before navigating
                    systemCategorizations.forEach(categorization => {
                      generateSecurityRequirements(categorization);
                    });
                    // Navigate to requirements tab
                    onNavigateToNext();
                  }}
                  className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors"
                >
                  Next: Generate & View NIST 800-53 Controls →
                </button>
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  );
}